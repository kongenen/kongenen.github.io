(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{449:function(_,v,t){"use strict";t.r(v);var e=t(11),d=Object(e.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"第十七章-标准库特殊设施"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第十七章-标准库特殊设施"}},[_._v("#")]),_._v(" 第十七章 标准库特殊设施")]),_._v(" "),v("h2",{attrs:{id:"tuple类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tuple类型"}},[_._v("#")]),_._v(" tuple类型")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("tuple")]),_._v("是类似"),v("code",[_._v("pair")]),_._v("的模板，每个成员类型都可以不同，但"),v("code",[_._v("tuple")]),_._v("可以有任意数量的成员。")]),_._v(" "),v("li",[_._v("但每个确定的"),v("code",[_._v("tuple")]),_._v("类型的成员数目是固定的。")]),_._v(" "),v("li",[_._v("我们可以将"),v("code",[_._v("tuple")]),_._v("看做一个“快速而随意”的数据结构。")])]),_._v(" "),v("p",[v("strong",[_._v("tuple支持的操作")]),_._v("：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作")]),_._v(" "),v("th",[_._v("解释")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("tuple<T1, T2, ..., Tn> t;")])]),_._v(" "),v("td",[v("code",[_._v("t")]),_._v("是一个"),v("code",[_._v("tuple")]),_._v("，成员数为"),v("code",[_._v("n")]),_._v("，第"),v("code",[_._v("i")]),_._v("个成员的类型是"),v("code",[_._v("Ti")]),_._v("所有成员都进行值初始化。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("tuple<T1, T2, ..., Tn> t(v1, v2, ..., vn);")])]),_._v(" "),v("td",[_._v("每个成员用对应的初始值"),v("code",[_._v("vi")]),_._v("进行初始化。此构造函数是"),v("code",[_._v("explicit")]),_._v("的。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("make_tuple(v1, v2, ..., vn)")])]),_._v(" "),v("td",[_._v("返回一个用给定初始值初始化的"),v("code",[_._v("tuple")]),_._v("。"),v("code",[_._v("tuple")]),_._v("的类型从初始值的类型"),v("strong",[_._v("推断")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("t1 == t2")])]),_._v(" "),v("td",[_._v("当两个"),v("code",[_._v("tuple")]),_._v("具有相同数量的成员且成员对应相等时，两个"),v("code",[_._v("tuple")]),_._v("相等。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("t1 relop t2")])]),_._v(" "),v("td",[v("code",[_._v("tuple")]),_._v("的关系运算使用"),v("strong",[_._v("字典序")]),_._v("。两个"),v("code",[_._v("tuple")]),_._v("必须具有相同数量的成员。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("get<i>(t)")])]),_._v(" "),v("td",[_._v("返回"),v("code",[_._v("t")]),_._v("的第"),v("code",[_._v("i")]),_._v("个数据成员的引用：如果"),v("code",[_._v("t")]),_._v("是一个左值，结果是一个左值引用；否则，结果是一个右值引用。"),v("code",[_._v("tuple")]),_._v("的所有成员都是"),v("code",[_._v("public")]),_._v("的。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("tuple_size<tupleType>::value")])]),_._v(" "),v("td",[_._v("一个类模板，可以通过一个"),v("code",[_._v("tuple")]),_._v("类型来初始化。它有一个名为"),v("code",[_._v("value")]),_._v("的"),v("code",[_._v("public constexpr static")]),_._v("数据成员，类型为"),v("code",[_._v("size_t")]),_._v("，表示给定"),v("code",[_._v("tuple")]),_._v("类型中成员的数量。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("tuple_element<i, tupleType>::type")])]),_._v(" "),v("td",[_._v("一个类模板，可以通过一个整型常量和一个"),v("code",[_._v("tuple")]),_._v("类型来初始化。它有一个名为"),v("code",[_._v("type")]),_._v("的"),v("code",[_._v("public")]),_._v("成员，表示给定"),v("code",[_._v("tuple")]),_._v("类型中指定成员的类型。")])])])]),_._v(" "),v("h3",{attrs:{id:"定义和初始化tuple"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#定义和初始化tuple"}},[_._v("#")]),_._v(" 定义和初始化tuple")]),_._v(" "),v("p",[_._v("定义和初始化示例：")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("tuple<size_t, size_t, size_t> threeD;")])]),_._v(" "),v("li",[v("code",[_._v("tuple<size_t, size_t, size_t> threeD{1,2,3};")])]),_._v(" "),v("li",[v("code",[_._v('auto item = make_tuple("0-999-78345-X", 3, 2.00)；')])])]),_._v(" "),v("p",[_._v("访问tuple成员：")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("auto book = get<0>(item);")])]),_._v(" "),v("li",[v("code",[_._v("get<2>(item) *= 0.8;")])])]),_._v(" "),v("h3",{attrs:{id:"使用tuple返回多个值"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#使用tuple返回多个值"}},[_._v("#")]),_._v(" 使用tuple返回多个值")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("tuple")]),_._v("最常见的用途是从一个函数返回多个值。")])]),_._v(" "),v("h2",{attrs:{id:"bitset类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#bitset类型"}},[_._v("#")]),_._v(" bitset类型")]),_._v(" "),v("ul",[v("li",[_._v("处理二进制位的有序集；")]),_._v(" "),v("li",[v("code",[_._v("bitset")]),_._v("也是类模板，但尖括号中输入的是"),v("code",[_._v("bitset")]),_._v("的长度而不是元素类型，因为元素类型是固定的，都是一个二进制位。")])]),_._v(" "),v("p",[_._v("初始化"),v("code",[_._v("bitset")]),_._v("的方法：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作")]),_._v(" "),v("th",[_._v("解释")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("bitset<n> b;")])]),_._v(" "),v("td",[v("code",[_._v("b")]),_._v("有"),v("code",[_._v("n")]),_._v("位；每一位均是0.此构造函数是一个"),v("code",[_._v("constexpr")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("bitset<n> b(u);")])]),_._v(" "),v("td",[v("code",[_._v("b")]),_._v("是"),v("code",[_._v("unsigned long long")]),_._v("值"),v("code",[_._v("u")]),_._v("的低"),v("code",[_._v("n")]),_._v("位的拷贝。如果"),v("code",[_._v("n")]),_._v("大于"),v("code",[_._v("unsigned long long")]),_._v("的大小，则"),v("code",[_._v("b")]),_._v("中超出"),v("code",[_._v("unsigned long long")]),_._v("的高位被置为0。此构造函数是一个"),v("code",[_._v("constexpr")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("bitset<n> b(s, pos, m, zero, one);")])]),_._v(" "),v("td",[v("code",[_._v("b")]),_._v("是"),v("code",[_._v("string s")]),_._v("从位置"),v("code",[_._v("pos")]),_._v("开始"),v("code",[_._v("m")]),_._v("个字符的拷贝。"),v("code",[_._v("s")]),_._v("只能包含字符"),v("code",[_._v("zero")]),_._v("或"),v("code",[_._v("one")]),_._v("：如果"),v("code",[_._v("s")]),_._v("包含任何其他字符，构造函数会抛出"),v("code",[_._v("invalid_argument")]),_._v("异常。字符在"),v("code",[_._v("b")]),_._v("中分别保存为"),v("code",[_._v("zero")]),_._v("和"),v("code",[_._v("one")]),_._v("。"),v("code",[_._v("pos")]),_._v("默认为0，"),v("code",[_._v("m")]),_._v("默认为"),v("code",[_._v("string::npos")]),_._v("，"),v("code",[_._v("zero")]),_._v("默认为'0'，"),v("code",[_._v("one")]),_._v("默认为'1'。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("bitset<n> b(cp, pos, m, zero, one);")])]),_._v(" "),v("td",[_._v("和上一个构造函数相同，但从"),v("code",[_._v("cp")]),_._v("指向的字符数组中拷贝字符。如果未提供"),v("code",[_._v("m")]),_._v("，则"),v("code",[_._v("cp")]),_._v("必须指向一个"),v("code",[_._v("C")]),_._v("风格字符串。如果提供了"),v("code",[_._v("m")]),_._v("，则从"),v("code",[_._v("cp")]),_._v("开始必须至少有"),v("code",[_._v("m")]),_._v("个"),v("code",[_._v("zero")]),_._v("或"),v("code",[_._v("one")]),_._v("字符。")])])])]),_._v(" "),v("p",[_._v("初始化案例；")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("bitset<13> bitvec1(0xbeef);")])]),_._v(" "),v("li",[v("code",[_._v('bitset<32> bitvec4("1100");')])])]),_._v(" "),v("p",[v("code",[_._v("bitset")]),_._v("操作：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作")]),_._v(" "),v("th",[_._v("解释")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("b.any()")])]),_._v(" "),v("td",[v("code",[_._v("b")]),_._v("中是否存在1。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("b.all()")])]),_._v(" "),v("td",[v("code",[_._v("b")]),_._v("中都是1。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("b.none()")])]),_._v(" "),v("td",[v("code",[_._v("b")]),_._v("中是否没有1。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("b.count()")])]),_._v(" "),v("td",[v("code",[_._v("b")]),_._v("中1的个数。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("b.size()")])]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[v("code",[_._v("b.test(pos)")])]),_._v(" "),v("td",[v("code",[_._v("pos")]),_._v("下标是否是1")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("b.set(pos)")])]),_._v(" "),v("td",[v("code",[_._v("pos")]),_._v("置1")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("b.set()")])]),_._v(" "),v("td",[_._v("所有都置1")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("b.reset(pos)")])]),_._v(" "),v("td",[_._v("将位置"),v("code",[_._v("pos")]),_._v("处的位复位")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("b.reset()")])]),_._v(" "),v("td",[_._v("将"),v("code",[_._v("b")]),_._v("中所有位复位")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("b.flip(pos)")])]),_._v(" "),v("td",[_._v("将位置"),v("code",[_._v("pos")]),_._v("处的位取反")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("b.flip()")])]),_._v(" "),v("td",[_._v("将"),v("code",[_._v("b")]),_._v("中所有位取反")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("b[pos]")])]),_._v(" "),v("td",[_._v("访问"),v("code",[_._v("b")]),_._v("中位置"),v("code",[_._v("pos")]),_._v("处的位；如果"),v("code",[_._v("b")]),_._v("是"),v("code",[_._v("const")]),_._v("的，则当该位置位时，返回"),v("code",[_._v("true")]),_._v("；否则返回"),v("code",[_._v("false")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("b.to_ulong()")])]),_._v(" "),v("td",[_._v("返回一个"),v("code",[_._v("unsigned long")]),_._v("值，其位模式和"),v("code",[_._v("b")]),_._v("相同。如果"),v("code",[_._v("b")]),_._v("中位模式不能放入指定的结果类型，则抛出一个"),v("code",[_._v("overflow_error")]),_._v("异常。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("b.to_ullong()")])]),_._v(" "),v("td",[_._v("类似上面，返回一个"),v("code",[_._v("unsigned long long")]),_._v("值。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("b.to_string(zero, one)")])]),_._v(" "),v("td",[_._v("返回一个"),v("code",[_._v("string")]),_._v("，表示"),v("code",[_._v("b")]),_._v("中位模式。"),v("code",[_._v("zero")]),_._v("和"),v("code",[_._v("one")]),_._v("默认为0和1。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("os << b")])]),_._v(" "),v("td",[_._v("将"),v("code",[_._v("b")]),_._v("中二进制位打印为字符"),v("code",[_._v("1")]),_._v("或"),v("code",[_._v("0")]),_._v("，打印到流"),v("code",[_._v("os")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("is >> b")])]),_._v(" "),v("td",[_._v("从"),v("code",[_._v("is")]),_._v("读取字符存入"),v("code",[_._v("b")]),_._v("。当下一个字符不是1或0时，或是已经读入"),v("code",[_._v("b.size()")]),_._v("个位时，读取过程停止。")])])])]),_._v(" "),v("h2",{attrs:{id:"正则表达式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[_._v("#")]),_._v(" 正则表达式")]),_._v(" "),v("ul",[v("li",[_._v("正则表达式（reqular expression）是一种描述字符序列的方法，是一种很强大的工具。")])]),_._v(" "),v("p",[_._v("正则表达式库组件：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("组件")]),_._v(" "),v("th",[_._v("解释")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("regex")])]),_._v(" "),v("td",[_._v("表示一个正则表达式的类")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("regex_match")])]),_._v(" "),v("td",[_._v("将一个字符序列与一个正则表达式匹配")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("regex_search")])]),_._v(" "),v("td",[_._v("寻找第一个与正则表达式匹配的子序列")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("regex_replace")])]),_._v(" "),v("td",[_._v("使用给定格式替换一个正则表达式")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("sregex_iterator")])]),_._v(" "),v("td",[_._v("迭代器适配器，调用"),v("code",[_._v("regex_searcg")]),_._v("来遍历一个"),v("code",[_._v("string")]),_._v("中所有匹配的子串")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("smatch")])]),_._v(" "),v("td",[_._v("容器类，保存在"),v("code",[_._v("string")]),_._v("中搜索的结果")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("ssub_match")])]),_._v(" "),v("td",[v("code",[_._v("string")]),_._v("中匹配的子表达式的结果")])])])]),_._v(" "),v("p",[v("code",[_._v("regex_match")]),_._v("和"),v("code",[_._v("regex_search")]),_._v("的参数：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作")]),_._v(" "),v("th",[_._v("解释")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("(seq, m, r, mft)")])]),_._v(" "),v("td",[_._v("在字符序列"),v("code",[_._v("seq")]),_._v("中查找"),v("code",[_._v("regex")]),_._v("对象"),v("code",[_._v("r")]),_._v("中的正则表达式。"),v("code",[_._v("seq")]),_._v("可以是一个"),v("code",[_._v("string")]),_._v("、标识范围的一对迭代器、一个指向空字符结尾的字符数组的指针。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("(seq, r, mft)")])]),_._v(" "),v("td",[v("code",[_._v("m")]),_._v("是一个"),v("code",[_._v("match")]),_._v("对象，用来保存匹配结果的相关细节。"),v("code",[_._v("m")]),_._v("和"),v("code",[_._v("seq")]),_._v("必须具有兼容的类型。"),v("code",[_._v("mft")]),_._v("是一个可选的"),v("code",[_._v("regex_constants::match_flag_type")]),_._v("值。")])])])]),_._v(" "),v("ul",[v("li",[_._v("这些操作会返回"),v("code",[_._v("bool")]),_._v("值，指出是否找到匹配。")])]),_._v(" "),v("h3",{attrs:{id:"使用正则表达式库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#使用正则表达式库"}},[_._v("#")]),_._v(" 使用正则表达式库")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("regex")]),_._v("使用的正则表达式语言是"),v("code",[_._v("ECMAScript")]),_._v("，模式"),v("code",[_._v("[[::alpha::]]")]),_._v("匹配任意字母。")]),_._v(" "),v("li",[_._v("由于反斜线是C++中的特殊字符，在模式中每次出现"),v("code",[_._v("\\")]),_._v("的地方，必须用一个额外的反斜线"),v("code",[_._v("\\\\")]),_._v("告知C++我们需要一个反斜线字符。")]),_._v(" "),v("li",[_._v("简单案例：\n"),v("ul",[v("li",[v("code",[_._v('string pattern("[^c]ei"); pattern = "[[:alpha:]]*" + pattern + "[[:alpha:]]*"')]),_._v(" 查找不在字符c之后的字符串ei")]),_._v(" "),v("li",[v("code",[_._v("regex r(pattern);")]),_._v(" 构造一个用于查找模式的regex")]),_._v(" "),v("li",[v("code",[_._v("smatch results;")]),_._v(" 定义一个对象保存搜索结果")]),_._v(" "),v("li",[v("code",[_._v('string test_str = "receipt freind theif receive";')])]),_._v(" "),v("li",[v("code",[_._v("if (regex_search(test_str, results, r)) cout << results.str() << endl;")]),_._v(" 如有匹配子串，打印匹配的单词。")])])])]),_._v(" "),v("p",[v("code",[_._v("regex")]),_._v("（和"),v("code",[_._v("wregex")]),_._v("）选项：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作")]),_._v(" "),v("th",[_._v("解释")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("regex r(re)")]),_._v(" "),v("code",[_._v("regex r(re, f)")])]),_._v(" "),v("td",[v("code",[_._v("re")]),_._v("表示一个正则表达式，它可以是一个"),v("code",[_._v("string")]),_._v("、一对表示字符范围的迭代器、一个指向空字符结尾的字符数组的指针、一个字符指针和一个计数器、一个花括号包围的字符列表。"),v("code",[_._v("f")]),_._v("是指出对象如何处理的标志。"),v("code",[_._v("f")]),_._v("通过下面列出来的值来设置。如果未指定"),v("code",[_._v("f")]),_._v("，其默认值为"),v("code",[_._v("ECMAScript")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("r1 = re")])]),_._v(" "),v("td",[_._v("将"),v("code",[_._v("r1")]),_._v("中的正则表达式替换Wie"),v("code",[_._v("re")]),_._v("。"),v("code",[_._v("re")]),_._v("表示一个正则表达式，它可以是另一个"),v("code",[_._v("regex")]),_._v("对象、一个"),v("code",[_._v("string")]),_._v("、一个指向空字符结尾的字符数组的指针或是一个花括号包围的字符列表。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("r1.assign(re, f)")])]),_._v(" "),v("td",[_._v("和使用赋值运算符（=）的效果相同：可选的标志"),v("code",[_._v("f")]),_._v("也和"),v("code",[_._v("regex")]),_._v("的构造函数中对应的参数含义相同。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("r.mark_count()")])]),_._v(" "),v("td",[v("code",[_._v("r")]),_._v("中子表达式的数目")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("r.flags()")])]),_._v(" "),v("td",[_._v("返回"),v("code",[_._v("r")]),_._v("的标志集")])])])]),_._v(" "),v("p",[_._v("定义"),v("code",[_._v("regex")]),_._v("时指定的标志：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作")]),_._v(" "),v("th",[_._v("解释")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("icase")])]),_._v(" "),v("td",[_._v("在匹配过程中忽略大小写")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("nosubs")])]),_._v(" "),v("td",[_._v("不保存匹配的子表达式")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("optimize")])]),_._v(" "),v("td",[_._v("执行速度优先于构造速度")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("ECMAScript")])]),_._v(" "),v("td",[_._v("使用"),v("code",[_._v("ECMA-262")]),_._v("指定的语法")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("basic")])]),_._v(" "),v("td",[_._v("使用"),v("code",[_._v("POSIX")]),_._v("基本的正则表达式语法")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("extended")])]),_._v(" "),v("td",[_._v("使用"),v("code",[_._v("POSIX")]),_._v("扩展的正则表达式语法")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("awk")])]),_._v(" "),v("td",[_._v("使用"),v("code",[_._v("POSIX")]),_._v("版本的"),v("code",[_._v("awk")]),_._v("语言的语法")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("grep")])]),_._v(" "),v("td",[_._v("使用"),v("code",[_._v("POSIX")]),_._v("版本的"),v("code",[_._v("grep")]),_._v("的语法")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("egrep")])]),_._v(" "),v("td",[_._v("使用"),v("code",[_._v("POSIX")]),_._v("版本的"),v("code",[_._v("egrep")]),_._v("的语法")])])])]),_._v(" "),v("ul",[v("li",[_._v("可以将正则表达式本身看做是一种简单程序语言设计的程序。在运行时，当一个"),v("code",[_._v("regex")]),_._v("对象被初始化或被赋予新模式时，才被“编译”。")]),_._v(" "),v("li",[_._v("如果编写的正则表达式存在错误，会在运行时抛出一个"),v("code",[_._v("regex_error")]),_._v("的异常。")]),_._v(" "),v("li",[_._v("避免创建不必要的正则表达式。构建一个"),v("code",[_._v("regex")]),_._v("对象可能比较耗时。")])]),_._v(" "),v("h3",{attrs:{id:"匹配与regex迭代器类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#匹配与regex迭代器类型"}},[_._v("#")]),_._v(" 匹配与regex迭代器类型")]),_._v(" "),v("p",[v("code",[_._v("sregex_iterator")]),_._v("操作（用来获得所有匹配）：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作")]),_._v(" "),v("th",[_._v("解释")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("sregex_iterator it(b, e, r);")])]),_._v(" "),v("td",[_._v("一个"),v("code",[_._v("sregex_iterator")]),_._v("，遍历迭代器"),v("code",[_._v("b")]),_._v("和"),v("code",[_._v("e")]),_._v("表示的"),v("code",[_._v("string")]),_._v("。它调用"),v("code",[_._v("sregex_search(b, e, r)")]),_._v("将"),v("code",[_._v("it")]),_._v("定位到输入中第一个匹配的位置。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("sregex_iterator end;")])]),_._v(" "),v("td",[v("code",[_._v("sregex_iterator")]),_._v("的尾后迭代器")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("*it")]),_._v("， "),v("code",[_._v("it->")])]),_._v(" "),v("td",[_._v("根据最后一个调用"),v("code",[_._v("regex_search")]),_._v("的结果，返回一个"),v("code",[_._v("smatch")]),_._v("对象的引用或一个指向"),v("code",[_._v("smatch")]),_._v("对象的指针。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("++it")]),_._v(" ， "),v("code",[_._v("it++")])]),_._v(" "),v("td",[_._v("从输入序列当前匹配位置开始调用"),v("code",[_._v("regex_search")]),_._v("。前置版本返回递增后迭代器；后置版本返回旧值。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("it1 == it2")])]),_._v(" "),v("td",[_._v("如果两个"),v("code",[_._v("sregex_iterator")]),_._v("都是尾后迭代器，则它们相等。两个非尾后迭代器是从相同的输入序列和"),v("code",[_._v("regex")]),_._v("对象构造，则它们相等。")])])])]),_._v(" "),v("p",[_._v("示例：")]),_._v(" "),v("div",{staticClass:"language-cpp line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-cpp"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[_._v("// 将字符串file中所有匹配模式r的子串输出")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("for")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("sregex_iterator "),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("it")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("file"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("begin")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v(" file"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("end")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v(" r"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v(" end_it"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v(" it "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("!=")]),_._v(" end_it"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("++")]),_._v("it"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n    cout "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("<<")]),_._v(" it "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("->")]),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("str")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("<<")]),_._v(" endl"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n")])]),_._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br"),v("span",{staticClass:"line-number"},[_._v("2")]),v("br"),v("span",{staticClass:"line-number"},[_._v("3")]),v("br"),v("span",{staticClass:"line-number"},[_._v("4")]),v("br")])]),v("p",[v("code",[_._v("smatch")]),_._v("操作：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作")]),_._v(" "),v("th",[_._v("解释")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("m.ready()")])]),_._v(" "),v("td",[_._v("如果已经通过调用"),v("code",[_._v("regex_search")]),_._v("或"),v("code",[_._v("regex_match")]),_._v("设置了"),v("code",[_._v("m")]),_._v("，则返回"),v("code",[_._v("true")]),_._v("；否则返回"),v("code",[_._v("false")]),_._v("。如果"),v("code",[_._v("ready")]),_._v("返回"),v("code",[_._v("false")]),_._v("，则对"),v("code",[_._v("m")]),_._v("进行操作是未定义的。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("m.size()")])]),_._v(" "),v("td",[_._v("如果匹配失败，则返回0，；否则返回最近一次匹配的正则表达式中子表达式的数目。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("m.empty()")])]),_._v(" "),v("td",[_._v("等价于"),v("code",[_._v("m.size() == 0")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("m.prefix()")])]),_._v(" "),v("td",[_._v("一个"),v("code",[_._v("ssub_match")]),_._v("对象，标识当前匹配之前的序列")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("m.suffix()")])]),_._v(" "),v("td",[_._v("一个"),v("code",[_._v("ssub_match")]),_._v("对象，标识当前匹配之后的部分")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("m.format(...)")])]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[v("code",[_._v("m.length(n)")])]),_._v(" "),v("td",[_._v("第"),v("code",[_._v("n")]),_._v("个匹配的子表达式的大小")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("m.position(n)")])]),_._v(" "),v("td",[_._v("第"),v("code",[_._v("n")]),_._v("个子表达式距离序列开始的长度")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("m.str(n)")])]),_._v(" "),v("td",[_._v("第"),v("code",[_._v("n")]),_._v("个子表达式匹配的"),v("code",[_._v("string")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("m[n]")])]),_._v(" "),v("td",[_._v("对应第"),v("code",[_._v("n")]),_._v("个子表达式的"),v("code",[_._v("ssub_match")]),_._v("对象")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("m.begin(), m.end()")])]),_._v(" "),v("td",[_._v("表示"),v("code",[_._v("m")]),_._v("中"),v("code",[_._v("ssub_match")]),_._v("元素范围的迭代器。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("m.cbegin(), m.cend()")])]),_._v(" "),v("td",[_._v("常量迭代器")])])])]),_._v(" "),v("h3",{attrs:{id:"使用子表达式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#使用子表达式"}},[_._v("#")]),_._v(" 使用子表达式")]),_._v(" "),v("ul",[v("li",[_._v("正则表达式语法通常用括号表示子表达式。")]),_._v(" "),v("li",[_._v("子表达式的索引从1开始。")]),_._v(" "),v("li",[_._v("在"),v("code",[_._v("fmt")]),_._v("中用"),v("code",[_._v("$")]),_._v("后跟子表达式的索引号来标识一个特定的子表达式。")])]),_._v(" "),v("p",[_._v("示例：")]),_._v(" "),v("div",{staticClass:"language-cpp line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-cpp"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("if")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("regex_search")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("filename"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v(" results"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v(" r"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v("\n    cout "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("<<")]),_._v(" results"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("str")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("1")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("<<")]),_._v(" endl"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("  "),v("span",{pre:!0,attrs:{class:"token comment"}},[_._v("// .str(1)获取第一个子表达式匹配结果")]),_._v("\n")])]),_._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br"),v("span",{staticClass:"line-number"},[_._v("2")]),v("br")])]),v("p",[v("code",[_._v("ssub_match")]),_._v("子匹配操作：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作")]),_._v(" "),v("th",[_._v("解释")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("matched")])]),_._v(" "),v("td",[_._v("一个"),v("code",[_._v("public bool")]),_._v("数据成员，指出"),v("code",[_._v("ssub_match")]),_._v("是否匹配了")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("first")]),_._v("， "),v("code",[_._v("second")])]),_._v(" "),v("td",[v("code",[_._v("public")]),_._v("数据成员，指向匹配序列首元素和尾后位置的迭代器。如果未匹配，则"),v("code",[_._v("first")]),_._v("和"),v("code",[_._v("second")]),_._v("是相等的。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("length()")])]),_._v(" "),v("td",[_._v("匹配的大小，如果"),v("code",[_._v("matched")]),_._v("为"),v("code",[_._v("false")]),_._v("，则返回0。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("str()")])]),_._v(" "),v("td",[_._v("返回一个包含输入中匹配部分的"),v("code",[_._v("string")]),_._v("。如果"),v("code",[_._v("matched")]),_._v("为"),v("code",[_._v("false")]),_._v("，则返回空"),v("code",[_._v("string")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("s = ssub")])]),_._v(" "),v("td",[_._v("将"),v("code",[_._v("ssub_match")]),_._v("对象"),v("code",[_._v("ssub")]),_._v("转化为"),v("code",[_._v("string")]),_._v("对象"),v("code",[_._v("s")]),_._v("。等价于"),v("code",[_._v("s=ssub.str()")]),_._v("，转换运算符不是"),v("code",[_._v("explicit")]),_._v("的。")])])])]),_._v(" "),v("h3",{attrs:{id:"使用regex-replace"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#使用regex-replace"}},[_._v("#")]),_._v(" 使用regex_replace")]),_._v(" "),v("p",[_._v("正则表达式替换操作：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作")]),_._v(" "),v("th",[_._v("解释")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("m.format(dest, fmt, mft)")]),_._v(", "),v("code",[_._v("m.format(fmt, mft)")])]),_._v(" "),v("td",[_._v("使用格式字符串"),v("code",[_._v("fmt")]),_._v("生成格式化输出，匹配在"),v("code",[_._v("m")]),_._v("中，可选的"),v("code",[_._v("match_flag_type")]),_._v("标志在"),v("code",[_._v("mft")]),_._v("中。第一个版本写入迭代器"),v("code",[_._v("dest")]),_._v("指向的目的为止，并接受"),v("code",[_._v("fmt")]),_._v("参数，可以是一个"),v("code",[_._v("string")]),_._v("，也可以是一个指向空字符结尾的字符数组的指针。"),v("code",[_._v("mft")]),_._v("的默认值是"),v("code",[_._v("format_default")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("rege_replace(dest, seq, r, fmt, mft)")]),_._v("，  "),v("code",[_._v("regex_replace(seq, r, fmt, mft)")])]),_._v(" "),v("td",[_._v("遍历"),v("code",[_._v("seq")]),_._v("，用"),v("code",[_._v("regex_search")]),_._v("查找与"),v("code",[_._v("regex")]),_._v("对象"),v("code",[_._v("r")]),_._v("相匹配的子串，使用格式字符串"),v("code",[_._v("fmt")]),_._v("和可选的"),v("code",[_._v("match_flag_type")]),_._v("标志来生成输出。"),v("code",[_._v("mft")]),_._v("的默认值是"),v("code",[_._v("match_default")])])])])]),_._v(" "),v("p",[_._v("示例：")]),_._v(" "),v("div",{staticClass:"language-cpp line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-cpp"}},[v("code",[_._v("string phone "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[_._v('"(\\\\()?(\\\\d{3})(\\\\))?([-. ])?(\\\\d{3})([-. ]?)(\\\\d{4})"')]),_._v("\nstring fmt "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[_._v('"$2.$5.$7"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("  "),v("span",{pre:!0,attrs:{class:"token comment"}},[_._v("// 将号码格式改为ddd.ddd.dddd")]),_._v("\nregex "),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("r")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("phone"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("  "),v("span",{pre:!0,attrs:{class:"token comment"}},[_._v("// 用来寻找模式的regex对象")]),_._v("\nstring number "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[_._v('"(908) 555-1800"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\ncout "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("<<")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("regex_replace")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("number"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v(" r"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v(" fmt"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("<<")]),_._v(" endl"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n")])]),_._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br"),v("span",{staticClass:"line-number"},[_._v("2")]),v("br"),v("span",{staticClass:"line-number"},[_._v("3")]),v("br"),v("span",{staticClass:"line-number"},[_._v("4")]),v("br"),v("span",{staticClass:"line-number"},[_._v("5")]),v("br")])]),v("p",[_._v("匹配标志：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作")]),_._v(" "),v("th",[_._v("解释")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("match_default")])]),_._v(" "),v("td",[_._v("等价于"),v("code",[_._v("format_default")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("match_not_bol")])]),_._v(" "),v("td",[_._v("不将首字符作为行首处理")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("match_not_eol")])]),_._v(" "),v("td",[_._v("不将尾字符作为行尾处理")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("match_not_bow")])]),_._v(" "),v("td",[_._v("不将首字符作为单词首处理")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("match_not_eow")])]),_._v(" "),v("td",[_._v("不将尾字符作为单词尾处理")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("match_any")])]),_._v(" "),v("td",[_._v("如果存在多于一个匹配，则可以返回任意一个匹配")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("match_not_null")])]),_._v(" "),v("td",[_._v("不匹配任何空序列")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("match_continuous")])]),_._v(" "),v("td",[_._v("匹配必须从输入的首字符开始")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("match_prev_avail")])]),_._v(" "),v("td",[_._v("输入序列包含第一个匹配之前的内容")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("format_default")])]),_._v(" "),v("td",[_._v("用"),v("code",[_._v("ECMAScript")]),_._v("规则替换字符串")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("format_sed")])]),_._v(" "),v("td",[_._v("用"),v("code",[_._v("POSIX sed")]),_._v("规则替换字符串")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("format_no_copy")])]),_._v(" "),v("td",[_._v("不输出输入序列中未匹配的部分")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("format_first_only")])]),_._v(" "),v("td",[_._v("只替换子表达式的第一次出现")])])])]),_._v(" "),v("h2",{attrs:{id:"随机数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#随机数"}},[_._v("#")]),_._v(" 随机数")]),_._v(" "),v("ul",[v("li",[_._v("新标准之前，C和C++都依赖一个简单的C库函数"),v("code",[_._v("rand")]),_._v("来生成随机数，且只符合均匀分布。")]),_._v(" "),v("li",[_._v("新标准："),v("strong",[_._v("随机数引擎")]),_._v(" + "),v("strong",[_._v("随机数分布类")]),_._v("， 定义在   "),v("code",[_._v("random")]),_._v("头文件中。")]),_._v(" "),v("li",[_._v("C++程序应该使用"),v("code",[_._v("default_random_engine")]),_._v("类和恰当的分布类对象。")])]),_._v(" "),v("h3",{attrs:{id:"随机数引擎和分布"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#随机数引擎和分布"}},[_._v("#")]),_._v(" 随机数引擎和分布")]),_._v(" "),v("p",[_._v("随机数引擎操作")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作")]),_._v(" "),v("th",[_._v("解释")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("Engine e;")])]),_._v(" "),v("td",[_._v("默认构造函数；使用该引擎类型默认的种子")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("Engine e(s);")])]),_._v(" "),v("td",[_._v("使用整型值"),v("code",[_._v("s")]),_._v("作为种子")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("e.seed(s)")])]),_._v(" "),v("td",[_._v("使用种子"),v("code",[_._v("s")]),_._v("重置引擎的状态")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("e.min()")]),_._v("，"),v("code",[_._v("e.max()")])]),_._v(" "),v("td",[_._v("此引擎可生成的最小值和最大值")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("Engine::result_type")])]),_._v(" "),v("td",[_._v("此引擎生成的"),v("code",[_._v("unsigned")]),_._v("整型类型")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("e.discard(u)")])]),_._v(" "),v("td",[_._v("将引擎推进"),v("code",[_._v("u")]),_._v("步；"),v("code",[_._v("u")]),_._v("的类型为"),v("code",[_._v("unsigned long long")])])])])]),_._v(" "),v("p",[_._v("示例：")]),_._v(" "),v("div",{staticClass:"language-cpp line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-cpp"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[_._v("// 初始化分布类型")]),_._v("\nuniform_int_distribution"),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("<")]),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("unsigned")]),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v(">")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("u")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("0")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("9")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[_._v("// 初始化引擎")]),_._v("\ndefault_random_engine e"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[_._v("// 随机生成0-9的无符号整数")]),_._v("\ncout "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("<<")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("u")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("e"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("<<")]),_._v(" endl"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n")])]),_._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br"),v("span",{staticClass:"line-number"},[_._v("2")]),v("br"),v("span",{staticClass:"line-number"},[_._v("3")]),v("br"),v("span",{staticClass:"line-number"},[_._v("4")]),v("br"),v("span",{staticClass:"line-number"},[_._v("5")]),v("br"),v("span",{staticClass:"line-number"},[_._v("6")]),v("br")])]),v("p",[v("strong",[_._v("设置随机数发生器种子")]),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("种子就是一个数值，引擎可以利用它从序列中一个新位置重新开始生成随机数。")]),_._v(" "),v("li",[_._v("种子可以使用系统函数"),v("code",[_._v("time(0)")]),_._v("。")])]),_._v(" "),v("h3",{attrs:{id:"其他随机数分布"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#其他随机数分布"}},[_._v("#")]),_._v(" 其他随机数分布")]),_._v(" "),v("p",[_._v("分布类型的操作：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作")]),_._v(" "),v("th",[_._v("解释")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("Dist d;")])]),_._v(" "),v("td",[_._v("默认够赞函数；使"),v("code",[_._v("d")]),_._v("准备好被使用。其他构造函数依赖于"),v("code",[_._v("Dist")]),_._v("的类型；分布类型的构造函数是"),v("code",[_._v("explicit")]),_._v("的。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("d(e)")])]),_._v(" "),v("td",[_._v("用相同的"),v("code",[_._v("e")]),_._v("连续调用"),v("code",[_._v("d")]),_._v("的话，会根据"),v("code",[_._v("d")]),_._v("的分布式类型生成一个随机数序列；"),v("code",[_._v("e")]),_._v("是一个随机数引擎对象。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("d.min()")]),_._v(","),v("code",[_._v("d.max()")])]),_._v(" "),v("td",[_._v("返回"),v("code",[_._v("d(e)")]),_._v("能生成的最小值和最大值。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("d.reset()")])]),_._v(" "),v("td",[_._v("重建"),v("code",[_._v("d")]),_._v("的状态，是的随后对"),v("code",[_._v("d")]),_._v("的使用不依赖于"),v("code",[_._v("d")]),_._v("已经生成的值。")])])])]),_._v(" "),v("h2",{attrs:{id:"io库再探"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#io库再探"}},[_._v("#")]),_._v(" IO库再探")]),_._v(" "),v("h3",{attrs:{id:"格式化输入与输出"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#格式化输入与输出"}},[_._v("#")]),_._v(" 格式化输入与输出")]),_._v(" "),v("ul",[v("li",[_._v("使用操纵符改变格式状态。")]),_._v(" "),v("li",[_._v("控制布尔值的格式： "),v("code",[_._v("cout << boolalpha << true << endl;")])]),_._v(" "),v("li",[_._v("指定整型的进制："),v("code",[_._v("cout << dec << 20 << endl;")])])]),_._v(" "),v("p",[_._v("定义在"),v("code",[_._v("iostream")]),_._v("中的操纵符：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操纵符")]),_._v(" "),v("th",[_._v("解释")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("boolalpha")])]),_._v(" "),v("td",[_._v("将"),v("code",[_._v("true")]),_._v("和"),v("code",[_._v("false")]),_._v("输出为字符串")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("* noboolalpha")])]),_._v(" "),v("td",[_._v("将"),v("code",[_._v("true")]),_._v("和"),v("code",[_._v("false")]),_._v("输出为1,0")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("showbase")])]),_._v(" "),v("td",[_._v("对整型值输出表示进制的前缀")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("* noshowbase")])]),_._v(" "),v("td",[_._v("不生成表示进制的前缀")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("showpoint")])]),_._v(" "),v("td",[_._v("对浮点值总是显示小数点")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("* noshowpoint")])]),_._v(" "),v("td",[_._v("只有当浮点值包含小数部分时才显示小数点")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("showpos")])]),_._v(" "),v("td",[_._v("对非负数显示"),v("code",[_._v("+")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("* noshowpos")])]),_._v(" "),v("td",[_._v("对非负数不显示"),v("code",[_._v("+")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("uppercase")])]),_._v(" "),v("td",[_._v("在十六进制中打印"),v("code",[_._v("0X")]),_._v("，在科学计数法中打印"),v("code",[_._v("E")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("* nouppercase")])]),_._v(" "),v("td",[_._v("在十六进制中打印"),v("code",[_._v("0x")]),_._v("，在科学计数法中打印"),v("code",[_._v("e")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("* dec")])]),_._v(" "),v("td",[_._v("整型值显示为十进制")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("hex")])]),_._v(" "),v("td",[_._v("整型值显示为十六进制")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("oct")])]),_._v(" "),v("td",[_._v("整型值显示为八进制")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("left")])]),_._v(" "),v("td",[_._v("在值的右侧添加填充字符")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("right")])]),_._v(" "),v("td",[_._v("在值的左侧添加填充字符")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("internal")])]),_._v(" "),v("td",[_._v("在符号和值之间添加填充字符")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("fixed")])]),_._v(" "),v("td",[_._v("浮点值显示为定点十进制")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("scientific")])]),_._v(" "),v("td",[_._v("浮点值显示为科学计数法")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("hexfloat")])]),_._v(" "),v("td",[_._v("浮点值显示为十六进制（C++11）")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("defaultfloat")])]),_._v(" "),v("td",[_._v("充值浮点数格式为十进制（C++11）")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("unitbuf")])]),_._v(" "),v("td",[_._v("每次输出操作后都刷新缓冲区")])]),_._v(" "),v("tr",[v("td",[_._v("1")]),_._v(" "),v("td",[v("code",[_._v("* nounitbuf")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("* skipws")])]),_._v(" "),v("td",[_._v("输入运算符跳过空白符")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("noskipws")])]),_._v(" "),v("td",[_._v("输入运算符不跳过空白符")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("flush")])]),_._v(" "),v("td",[_._v("刷新"),v("code",[_._v("ostream")]),_._v("缓冲区")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("ends")])]),_._v(" "),v("td",[_._v("插入空字符，然后刷新"),v("code",[_._v("ostream")]),_._v("缓冲区")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("endl")])]),_._v(" "),v("td",[_._v("插入换行，然后刷新"),v("code",[_._v("ostream")]),_._v("缓冲区")])])])]),_._v(" "),v("p",[_._v("其中"),v("code",[_._v("*")]),_._v("表示默认的流状态。")]),_._v(" "),v("h3",{attrs:{id:"未格式化的输入-输出操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#未格式化的输入-输出操作"}},[_._v("#")]),_._v(" 未格式化的输入/输出操作")]),_._v(" "),v("p",[_._v("单字节低层IO操作：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作")]),_._v(" "),v("th",[_._v("解释")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("is.get(ch)")])]),_._v(" "),v("td",[_._v("从"),v("code",[_._v("istream is")]),_._v("读取下一个字节存入字符"),v("code",[_._v("cn")]),_._v("中。返回"),v("code",[_._v("is")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("os.put(ch)")])]),_._v(" "),v("td",[_._v("将字符"),v("code",[_._v("ch")]),_._v("输出到"),v("code",[_._v("ostream os")]),_._v("。返回"),v("code",[_._v("os")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("is.get()")])]),_._v(" "),v("td",[_._v("将"),v("code",[_._v("is")]),_._v("的下一个字节作为"),v("code",[_._v("int")]),_._v("返回")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("is.putback(ch)")])]),_._v(" "),v("td",[_._v("将字符"),v("code",[_._v("ch")]),_._v("放回"),v("code",[_._v("is")]),_._v("。返回"),v("code",[_._v("is")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("is.unget()")])]),_._v(" "),v("td",[_._v("将"),v("code",[_._v("is")]),_._v("向后移动一个字节。返回"),v("code",[_._v("is")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("is.peek()")])]),_._v(" "),v("td",[_._v("将下一个字节作为"),v("code",[_._v("int")]),_._v("返回，但不从流中删除它。")])])])]),_._v(" "),v("p",[_._v("多字节低层IO操作：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作")]),_._v(" "),v("th",[_._v("解释")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("is.get(sink, size, delim)")])]),_._v(" "),v("td",[_._v("从"),v("code",[_._v("is")]),_._v("中读取最多"),v("code",[_._v("size")]),_._v("个字节，并保存在字符数组中，字符数组的起始地址由"),v("code",[_._v("sink")]),_._v("给出。读取过程直到遇到字符"),v("code",[_._v("delim")]),_._v("或读取了"),v("code",[_._v("size")]),_._v("个字节或遇到文件尾时停止。如果遇到了"),v("code",[_._v("delim")]),_._v("，则将其留在输入流中，不读取出来存入"),v("code",[_._v("sink")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("is.getline(sink, size, delim)")])]),_._v(" "),v("td",[_._v("与接收三个参数的"),v("code",[_._v("get")]),_._v("版本类似，但会读取并丢弃"),v("code",[_._v("delim")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("is.read(sink, size)")])]),_._v(" "),v("td",[_._v("读取最多"),v("code",[_._v("size")]),_._v("个字节，存入字符数组"),v("code",[_._v("sink")]),_._v("中。返回"),v("code",[_._v("is")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("is.gcount()")])]),_._v(" "),v("td",[_._v("返回上一个未格式化读取从"),v("code",[_._v("is")]),_._v("读取的字节数")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("os.write(source, size)")])]),_._v(" "),v("td",[_._v("将字符数组"),v("code",[_._v("source")]),_._v("中的"),v("code",[_._v("size")]),_._v("个字节写入"),v("code",[_._v("os")]),_._v("。返回"),v("code",[_._v("os")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("is.ignore(size, delim)")])]),_._v(" "),v("td",[_._v("读取并忽略最多"),v("code",[_._v("size")]),_._v("个字符，包括"),v("code",[_._v("delim")]),_._v("。与其他未格式化函数不同，"),v("code",[_._v("ignore")]),_._v("有默认参数："),v("code",[_._v("size")]),_._v("默认值是1，"),v("code",[_._v("delim")]),_._v("的默认值为文件尾。")])])])]),_._v(" "),v("ul",[v("li",[_._v("注意：一般情况下，主张使用标准库提供的高层抽象，低层函数容易出错。")])]),_._v(" "),v("h3",{attrs:{id:"流随机访问"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#流随机访问"}},[_._v("#")]),_._v(" 流随机访问")]),_._v(" "),v("ul",[v("li",[_._v("只适用于"),v("code",[_._v("fstream")]),_._v("和"),v("code",[_._v("sstream")]),_._v("。")]),_._v(" "),v("li",[_._v("通过将标记"),v("code",[_._v("seek")]),_._v("到一个给定位置来重定位它。")]),_._v(" "),v("li",[v("code",[_._v("tell")]),_._v("告诉我们标记的当前位置。")])]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作")]),_._v(" "),v("th",[_._v("解释")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("tellg()")]),_._v("，"),v("code",[_._v("tellp")])]),_._v(" "),v("td",[_._v("返回一个输入流中（"),v("code",[_._v("tellg")]),_._v("）或输出流中（"),v("code",[_._v("tellp")]),_._v("）标记的当前位置。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("seekg(pos)")]),_._v("，"),v("code",[_._v("seekp(pos)")])]),_._v(" "),v("td",[_._v("在一个输入流或输出流中将标记重定位到给定的绝对地址。"),v("code",[_._v("pos")]),_._v("通常是一个当前"),v("code",[_._v("teelg")]),_._v("或"),v("code",[_._v("tellp")]),_._v("返回的值。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("seekp(off, from)")]),_._v("，"),v("code",[_._v("seekg(off, from)")])]),_._v(" "),v("td",[_._v("在一个输入流或输出流中将标记定位到"),v("code",[_._v("from")]),_._v("之前或之后"),v("code",[_._v("off")]),_._v("个字符，"),v("code",[_._v("from")]),_._v("可以是下列值之一："),v("code",[_._v("beg")]),_._v("，偏移量相对于流开始位置；"),v("code",[_._v("cur")]),_._v("，偏移量相对于流当前位置；"),v("code",[_._v("end")]),_._v("，偏移量相对于流结尾位置。")])])])])])}),[],!1,null,null,null);v.default=d.exports}}]);