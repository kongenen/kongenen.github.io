(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{363:function(s,n,a){"use strict";a.r(n);var t=a(11),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[n("strong",[s._v("作者丨卡拉肖克-X")])]),s._v(" "),n("p",[n("strong",[s._v("来源丨OpenCV学堂")])]),s._v(" "),n("h2",{attrs:{id:"_01-环境搭建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_01-环境搭建"}},[s._v("#")]),s._v(" "),n("strong",[s._v("01 环境搭建")])]),s._v(" "),n("p",[s._v("环境配置了一个早上，到10.48分配置完毕，有点难受。还好最后显示出第一张图片。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include&lt;opencv2/opencv.hpp>\n#include&lt;iostream>\n\nusingnamespacestd;\nusingnamespace cv;\nint main() \n{\n\n    Mat src = imread("D:/images/011.jpg",IMREAD_GRAYSCALE);//读取进来的数据以矩阵的形势,第二个参数代表显示一张灰度图像。\n    if (src.empty()) \n    {\n        printf("could not load image");//如果图片不存在 将无法读取，打印到终端。\n    }\n    //超过屏幕的图像无法显示时候调用此函数。\n    namedWindow("输入窗口", WINDOW_FREERATIO);//创建了一个新窗口，参数1表示名称，第二个参数代表一个自由的比例\n    imshow("输入窗口", src);//表示显示在新创建的输入窗口上，第一个参数表示窗口名称，src表示数据对象Mat \n    waitKey(0);//执行到这句，程序阻塞。参数表示延时时间。单位ms\n    destroyAllWindows();//销毁前面创建的显示窗口\n    return0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[s._v("第一节课介绍了如何读取第一张图片，并且显示出来，通过调用imread函数读取照片，再调用imshow显示图片到窗口。同时，讲述了如何打印灰度图像，图片读取失败的处理方式，代码注释详细介绍了每条语句的意思。")]),s._v(" "),n("h2",{attrs:{id:"_02-显示图象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_02-显示图象"}},[s._v("#")]),s._v(" "),n("strong",[s._v("02 显示图象")])]),s._v(" "),n("p",[s._v("1、色彩空间转换函数 cvtColor"),n("br"),s._v("\n2、图像的保存")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include&lt;opencv2/opencv.hpp>\nusing namespace cv;\n\nclass QuickDemo //创建一个QuickDemo对象\n{\n    public:\n        void colorSpace_Demo(Mat &amp;imge); //定义一个类，里面包含输入一个图片，对图片操作\n};\n\n#include&lt;quickopencv.h>\nvoid QuickDemo::colorSpace_Demo(Mat &amp;image)\n{\n    Mat gray, hsv;//定义2个矩阵类的图像gray和hsv，\n    cvtColor(image,hsv,COLOR_BGR2HSV);//图像转换函数，可以把image转成hsv，第三个参数是转成的类型\n    cvtColor(image,gray,COLOR_BGR2GRAY);//图像转换函数，可以把image转成hsv，第三个参数是转成的类型\n    imshow("HSV",hsv);\n    imshow("灰度",gray);\n    imwrite("D:/hsv.jpg",hsv);//保存图片，前面是保存图的地址，后面是保存图的名称\n    imwrite("D:/gray.jpg",gray);\n}\n\n#include&lt;opencv2/opencv.hpp>\n#include&lt;iostream>\n#include&lt;quickopencv.h>\n\nusing namespace std;\nusing namespace cv;\nint main() \n{\n\n    Mat src = imread("D:/images/1.jpg",IMREAD_ANYCOLOR);//B,G,R实际上0-255三色。3通道\n    //读取进来的数据以矩阵的形势,第二个参数代表显示一张灰度图像。\n    if (src.empty()) \n    {\n        printf("could not load image");//如果图片不存在 将无法读取，打印到终端。\n        return-1;\n    }\n    //超过屏幕的图像无法显示时候调用此函数。\n\n    namedWindow("输入窗口", WINDOW_FREERATIO);//创建了一个新窗口，参数1表示名称，第二个参数代表一个自由的比例\n    imshow("输入窗口", src);//表示显示在新创建的输入窗口上，第一个参数表示窗口名称，src表示数据对象Mat \n//在主函数中调用之前创建的类对象    \n    QuickDemo qd;\n    qd.colorSpace_Demo(src);\n\n    waitKey(0);//执行到这句，程序阻塞。参数表示延时时间。单位ms\n    destroyAllWindows();//销毁前面创建的显示窗口\n    return0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br")])]),n("p",[s._v("这节主要介绍了创建一个类对象，然后通过类对象调用函数，在main主函数中进行调用实现类对象中的功能，比如转换成HSV类型图片和GRAY类型图片，最后通过imwrite函数进行图像的保存。")]),s._v(" "),n("h2",{attrs:{id:"_03-图像对象的创建与赋值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_03-图像对象的创建与赋值"}},[s._v("#")]),s._v(" "),n("strong",[s._v("03 图像对象的创建与赋值")])]),s._v(" "),n("p",[s._v("1、怎么操作mat"),n("br"),s._v("\n2、怎么访问每一个像素点"),n("br"),s._v("\n3、怎么创建一个空图或者mat")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::mat_creation_demo(Mat &amp;image) \n{\n    Mat m1, m2;\n    m1 = image.clone();\n    image.copyTo(m2);\n\n    //创建空白图像\n    Mat m3 = Mat::ones(Size(400, 400), CV_8UC3);//创建8*8的CV8位的无符号的n通道的unsigned char\n    //ones&amp;zeros是初始化的方法\n    m3 = Scalar(255, 0, 0);//给三个通道都赋值127  ,单通道赋值方法 m3 = 127;\n    //m3初始为蓝色\n    //数据的宽度和长度是由通道数决定的。\n    //std::cout &lt;&lt; "width:"&lt;&lt;m3.cols&lt;&lt;"height"&lt;&lt; m3.rows &lt;&lt;"channels"&lt;&lt;m3.channels()&lt;&lt; std::endl;\n    //用来查看宽度，高度与通道数。\n    /*std::cout &lt;&lt; m3 &lt;&lt; std::endl;*/\n    Mat m4 = m3.clone();//赋值M4就是M3 M4改变了,M3也改变了，没有产生新的自我(M4与M3同体)\n    //M4为M3的克隆，M3还是原来的颜色，不会改变。(M4与M3不同体，各自是各自的颜色)\n    //m3.copyTo(m4);//把M3赋值给M4，M4就是蓝色\n    m4 = Scalar(0, 255, 255);//改变m4的颜色为黄色 ,m4也改变\n    imshow("图像3", m3);//标题和图像名称   显示图像m3 纯蓝色\n    imshow("图像4", m4);//标题和图像名称\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("本节课介绍了如何创建一个Mat对象，通过创建新的Mat对象来创建用户的特定的底色画布，创建图像的基本类型有两种一种是ones一种是zeros，ones()中的第一个参数代表图像的大小，第二个参数代表创建几维的图像，UC代表无符号字符型，数组3代表通道数。克隆和赋值的区别，克隆就是产生一个新的对象，新对象改变属性，旧对象属性不变（各自为政）。赋值是二者同体，当新属性发生改变，旧属性也发生改变（二者同体）。")]),s._v(" "),n("h2",{attrs:{id:"_04-图像像素的读写操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_04-图像像素的读写操作"}},[s._v("#")]),s._v(" "),n("strong",[s._v("04 图像像素的读写操作")])]),s._v(" "),n("p",[s._v("如何遍历和修改每个像素点的数值，分为单通道和多通道。访问模式模式也有两种。第一种是数组访问模式，用最常规的数组下标访问像素值。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::pixel_visit_demo(Mat &amp;image)\n{\n    int dims = image.channels();\n    int h = image.rows;\n    int w = image.cols;\n    for (int row = 0; row &lt; h; row++) \n    {\n        for (int col = 0; col &lt; w; col++) \n        {\n            if (dims == 1) //单通道的灰度图像\n            {\n                int pv = image.at&lt;uchar>(row, col);//得到像素值\n                image.at&lt;uchar>(row, col) = 255 - pv;//给像素值重新赋值\n\n            }\n            if (dims == 3) //三通道的彩色图像\n            {\n                Vec3b bgr = image.at&lt;Vec3b>(row, col); //opencv特定的类型，获取三维颜色，3个值\n                image.at&lt;Vec3b>(row, col)[0] = 255 - bgr[0];\n                image.at&lt;Vec3b>(row, col)[1] = 255 - bgr[1];\n                image.at&lt;Vec3b>(row, col)[2] = 255 - bgr[2];//对彩色图像读取它的像素值，并且对像素值进行改写。\n            }\n        }\n    }\n    namedWindow("像素读写演示", WINDOW_FREERATIO);\n    imshow("像素读写演示", image);\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("p",[s._v("第二种为指针访问模式，指定一个指针为图片的首地址，通过循环遍历，指针++，一次往后推。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::pixel_visit_demo(Mat &amp;image)\n{\n    int dims = image.channels();\n    int h = image.rows;\n    int w = image.cols;\n    for (int row = 0; row &lt; h; row++)\n    {\n        uchar *current_row = image.ptr&lt;uchar>(row);\n\n        for (int col = 0; col &lt; w; col++)\n        {\n            if (dims == 1) //单通道的灰度图像\n            {\n                int pv = *current_row;//得到像素值\n                    *current_row++ = 255 - pv;//给像素值重新赋值\n\n            }\n            if (dims == 3) //三通道的彩色图像\n            {\n                *current_row++ = 255 - *current_row; //指针每做一次运算，就向后移动一位\n                *current_row++ = 255 - *current_row;\n                *current_row++ = 255 - *current_row;\n            }\n        }\n    }\n    namedWindow("像素读写演示", WINDOW_FREERATIO);\n    imshow("像素读写演示", image);\n\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br")])]),n("p",[s._v("本节主要介绍了通过两种遍历的方式访问图像的像素值，并且改变图像的像素值。")]),s._v(" "),n("h2",{attrs:{id:"_05-图像像素的操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_05-图像像素的操作"}},[s._v("#")]),s._v(" "),n("strong",[s._v("05 图像像素的操作")])]),s._v(" "),n("p",[s._v("对图像的各个像素点实现加减乘除的操作。介绍了常用的除爆函数saturate_cast，防止数值过界。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::operators_demo(Mat &amp;image)\n{\n    Mat dst = Mat::zeros(image.size(), image.type());\n    Mat m = Mat::zeros(image.size(), image.type());\n    dst = image - Scalar(50, 50, 50);\n    m = Scalar(50, 50, 50);\n    multiply(image,m,dst);//乘法操作 api\n    imshow("乘法操作", dst);\n    add(image, m, dst);//加法操作 api\n    imshow("加法操作", dst);\n    subtract(image, m, dst);//减法操作 api\n    imshow("减法操作", dst);\n    divide(image, m, dst);//除法操作 api\n    namedWindow("加法操作", WINDOW_FREERATIO);\n    imshow("加法操作", dst);\n    //加法操作底层\n    int dims = image.channels();\n    int h = image.rows;\n    int w = image.cols;\n    for (int row = 0; row &lt; h; row++)\n    {\n        for (int col = 0; col &lt; w; col++)\n        {\n                Vec3b p1 = image.at&lt;Vec3b>(row, col); //opencv特定的类型，获取三维颜色，3个值\n                Vec3b p2 = m.at&lt;Vec3b>(row, col);\n                dst.at&lt;Vec3b>(row, col)[0] = saturate_cast&lt;uchar>(p1[0] + p2[0]);//saturate_cast用来防爆，小于0就是0，大于255就是255\n                dst.at&lt;Vec3b>(row, col)[1] = saturate_cast&lt;uchar>(p1[1] + p2[1]);\n                dst.at&lt;Vec3b>(row, col)[2] = saturate_cast&lt;uchar>(p1[2] + p2[2]);//对彩色图像读取它的像素值，并且对像素值进行改写。\n        }\n    }\n    imshow("加法操作", dst);\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br")])]),n("p",[s._v("介绍了四种不同的API实现，并且演示了一种加法的算法。")]),s._v(" "),n("h2",{attrs:{id:"_06-滚动条演示操作-调整图片亮度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_06-滚动条演示操作-调整图片亮度"}},[s._v("#")]),s._v(" "),n("strong",[s._v("06 滚动条演示操作-调整图片亮度")])]),s._v(" "),n("p",[s._v("本节介绍怎么通过createTrackbar来设置一个进度条，实现图片的亮度调节。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('Mat  src, dst, m;\nint lightness = 50;//定义初始的亮度为50\nstatic void on_track(int ,void*) \n{\n    m = Scalar(lightness,lightness,lightness);//创建调整亮度的数值\n    subtract(src, m, dst);//定义亮度变化为减\n    imshow("亮度调整", dst);//显示调整亮度之后的图片\n}\nvoid QuickDemo::tracking_bar_demo(Mat &amp;image)\n{\n    namedWindow("亮度调整",WINDOW_AUTOSIZE);\n    dst = Mat::zeros(image.size(), image.type());//图片的初始化创建一个和image大小相等，种类相同的图像\n    m = Mat::zeros(image.size(), image.type());//图片的初始化创建一个和image大小相等，种类相同的图像\n    src = image;//给src赋值\n    int max_value = 100;//定义最大值为100\n    createTrackbar("Value Bar:", "亮度调整", &amp;lightness, max_value,on_track);//调用函数实现功能。\n    on_track(50, 0);\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("h2",{attrs:{id:"_07-滚动条演示操作-传递参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_07-滚动条演示操作-传递参数"}},[s._v("#")]),s._v(" "),n("strong",[s._v("07 滚动条演示操作-传递参数")])]),s._v(" "),n("p",[s._v("无类型指针类型转换与参数传递！")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('static void on_lightness(int b ,void* userdata) \n{\n    Mat image = *((Mat*)userdata);\n    Mat dst = Mat::zeros(image.size(), image.type());\n    Mat m = Mat::zeros(image.size(), image.type());\n    m = Scalar(b,b,b);\n    addWeighted(image,1.0,m,0,b,dst);//融合两张图\n    imshow("亮度&amp;对比度调整", dst);\n}\nstatic void on_contrast(int b, void* userdata)\n{\n    Mat image = *((Mat*)userdata);\n    Mat dst = Mat::zeros(image.size(), image.type());\n    Mat m = Mat::zeros(image.size(), image.type());\n    double contrast = b / 100.0;\n    addWeighted(image, contrast, m, 0.0, 0, dst);//融合两张图\n    imshow("亮度&amp;对比度调整", dst);\n}\nvoid QuickDemo::tracking_bar_demo(Mat &amp;image)\n{\n    namedWindow("亮度&amp;对比度调整",WINDOW_AUTOSIZE);\n    int lightness = 50;\n    int max_value = 100;\n    int contrast_value = 100;\n    createTrackbar("Value Bar:", "亮度&amp;对比度调整", &amp;lightness, max_value, on_lightness,(void*)(&amp;image));\n    createTrackbar("Contrast Bar:", "亮度&amp;对比度调整", &amp;contrast_value, 200, on_contrast, (void*)(&amp;image));\n    on_lightness(50, &amp;image);\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("h2",{attrs:{id:"_08-键盘响应操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_08-键盘响应操作"}},[s._v("#")]),s._v(" "),n("strong",[s._v("08 键盘响应操作")])]),s._v(" "),n("p",[s._v("本节介绍通过键盘输入，终端能够读取响应的信息。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::key_demo(Mat &amp;image) \n{\n    Mat dst= Mat::zeros(image.size(), image.type());\n    while (true) \n    {\n        char c = waitKey(100);//停顿100ms 做视频处理都是1\n        if (c == 27) { //esc 退出应用程序\n            break;\n        }\n        if (c == 49)//key#1\n        {\n            std::cout &lt;&lt;"you enter key #1" &lt;&lt; std::endl;\n            cvtColor(image, dst, COLOR_BGR2GRAY);\n        }\n        if (c == 50)//key#1\n        {\n            std::cout &lt;&lt; "you enter key #2"  &lt;&lt; std::endl;\n            cvtColor(image, dst, COLOR_BGR2HSV);\n        }\n        if (c == 51)//key#1\n        {\n            std::cout &lt;&lt; "you enter key #3" &lt;&lt; std::endl;\n            dst = Scalar(50, 50, 50);\n            add(image,dst,dst);\n        }\n        imshow("键盘响应",dst);\n        std::cout &lt;&lt; c &lt;&lt; std::endl;\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br")])]),n("p",[s._v("通过键盘输入，在终端得到响应，输入不同的键值，得到不一样的结果。")]),s._v(" "),n("h2",{attrs:{id:"_09-opencv自带颜色操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_09-opencv自带颜色操作"}},[s._v("#")]),s._v(" "),n("strong",[s._v("09 opencv自带颜色操作")])]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::color_style_demo(Mat &amp;image) \n{\n    int colormap[] = {\n        COLORMAP_AUTUMN ,\n        COLORMAP_BONE,\n        COLORMAP_CIVIDIS,\n        COLORMAP_DEEPGREEN,\n        COLORMAP_HOT,\n        COLORMAP_HSV,\n        COLORMAP_INFERNO,\n        COLORMAP_JET,\n        COLORMAP_MAGMA,\n        COLORMAP_OCEAN,\n        COLORMAP_PINK,\n        COLORMAP_PARULA,\n        COLORMAP_RAINBOW,\n        COLORMAP_SPRING,\n        COLORMAP_TWILIGHT,\n        COLORMAP_TURBO,\n        COLORMAP_TWILIGHT,\n        COLORMAP_VIRIDIS,\n        COLORMAP_TWILIGHT_SHIFTED,\n        COLORMAP_WINTER\n    };\n\n    Mat dst;\n    int index = 0;\n    while (true) \n    {\n        char c = waitKey(100);//停顿100ms 做视频处理都是1\n        if (c == 27) { //esc 退出应用程序\n            break;\n        }\n        if (c == 49)//key#1 按下按键1时，保存图片到指定位置\n        {\n            std::cout &lt;&lt; "you enter key #1" &lt;&lt; std::endl;\n            imwrite("D:/gray.jpg", dst);\n        }\n        applyColorMap(image, dst, colormap[index%19]);//循环展示19种图片\n        index++;\n        imshow("循环播放", dst);\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br")])]),n("p",[s._v("伪色彩填充与颜色表匹配")]),s._v(" "),n("h2",{attrs:{id:"_10-图像像素的逻辑操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_10-图像像素的逻辑操作"}},[s._v("#")]),s._v(" "),n("strong",[s._v("10 图像像素的逻辑操作")])]),s._v(" "),n("p",[s._v("本节介绍如何对图像的像素进行操作，包括与、或、非、异或，矩形在图像中的绘制。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::bitwise_demo(Mat &amp;image)\n{\n    Mat m1 = Mat::zeros(Size(256,256),CV_8UC3);\n    Mat m2 = Mat::zeros(Size(256,256),CV_8UC3);\n    rectangle(m1,Rect(100,100,80,80),Scalar(255,255,0),-1,LINE_8,0);//小于0表示填充，大于0表示绘制\n    rectangle(m2,Rect(150,150,80,80), Scalar(0,255,255), -1, LINE_8, 0);\n    imshow("m1", m1);\n    imshow("m2", m2);\n    Mat dst;\n    bitwise_and(m1, m2, dst);//位操作与\n    bitwise_or(m1, m2, dst);//位操作或\n    bitwise_not(image, dst);//取反操作\n    bitwise_xor(m1, m2, dst);//异或操作\n    imshow("像素位操作", dst);\n}\n\nrectangle(m1,Rect(100,100,80,80),Scalar(255,255,0),-1,LINE_8,0);\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("这个函数参数1是图片名称，参数2是矩形的起始&末尾位置，参数3 Scalar表示将要绘制图像的颜色，参数4表示小于0表示填充，大于0表示绘制，参数5表示四邻域或者八邻域的绘制，参数6表示中心坐标或者半径坐标的小数位数。")]),s._v(" "),n("h2",{attrs:{id:"_11-通道的分离与合并"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_11-通道的分离与合并"}},[s._v("#")]),s._v(" "),n("strong",[s._v("11 通道的分离与合并")])]),s._v(" "),n("p",[s._v("本节介绍如何把不同的通道给分离，归并，使得能显现出来不同的通道颜色。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::channels_demo(Mat &amp;image)\n{    \n    std::vector&lt;Mat>mv;\n    split(image, mv);\n    //imshow("蓝色", mv[0]);\n    //0,1,2三个通道分别代表BGR。\n    //关闭2个通道意味着开启一个通道。\n    //imshow("绿色", mv[1]);\n    //imshow("红色", mv[2]);\n    Mat dst;\n    mv[0] = 0;\n    mv[2] = 0;\n    merge(mv, dst);\n    imshow("蓝色", dst);\n    int from_to[] = { 0,2,1,1,2,0 };\n    //把通道相互交换，第0->第2，第一->第一，第二->第0\n    mixChannels(&amp;image,1,&amp;dst,1,from_to,3);//3表示3个通道\n    //参数1指针引用图像->参数2引用到dst\n    imshow("通道混合", dst);\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[s._v("M[0],M[1],M[2]分别代表BGR个不同的通道。要开启某个通道只需要关闭另外的一个通道即可。第二个内容为通道的合并，将不同通道的像素值进行转换操作，使图片呈现出不同的效果。")]),s._v(" "),n("h2",{attrs:{id:"_12-图像色彩空间转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_12-图像色彩空间转换"}},[s._v("#")]),s._v(" "),n("strong",[s._v("12 图像色彩空间转换")])]),s._v(" "),n("p",[s._v("本节内容实现任务是提取任务的轮廓，首先把RGB色彩空间的图片转换到HSV空间中，其次，提取图片的mask，通过使用inrangle提取hsv色彩空间的颜色。HSV色彩空间的颜色")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::inrange_demo(Mat &amp;image)\n{\n    Mat hsv;\n    cvtColor(image, hsv, COLOR_BGR2HSV);\n    Mat mask;\n    inRange(hsv,Scalar(35,43,46),Scalar(77,255,255),mask);\n    //35,43,46根据图片中绿色最低来确定最小值。\n    //77,255,255 提取\n    //参数1低范围，参数2高范围\n    //将hsv中的由低到高的像素点提取出来并且存储到mask当中。\n    imshow("mask",hsv);\n    Mat redback = Mat::zeros(image.size(), image.type());\n    redback = Scalar(40, 40, 200);\n    bitwise_not(mask, mask);\n    imshow("mask", mask);\n    image.copyTo(redback, mask);//把redback复制到mask，mask通过inRange得到。\n    imshow("roi提取", hsv);\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("h2",{attrs:{id:"_13-图像像素值统计"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_13-图像像素值统计"}},[s._v("#")]),s._v(" "),n("strong",[s._v("13 图像像素值统计")])]),s._v(" "),n("p",[s._v("分别定义双精度型变量 minv和maxv。指针变量minLoc，maxLoc；因为这图片是多通道的，所以使用一个容器装取数值，并且用split分离图片到MV中通过for循环操作，遍历图片信息，并且打印信息到终端。图像信息包括，方差，均值，大小。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::pixel_statistic_demo(Mat &amp;image)\n{\n    double minv, maxv;//定义最值\n    Point minLoc, maxLoc;//定义最值地址\n    std::vector&lt;Mat>mv;//mv是一个Mat类型的容器 装在这个容器内\n    split(image, mv);\n    for (int i = 0; i &lt; mv.size(); i++) \n    {\n        //分别打印各个通道的数值\n        minMaxLoc(mv[i], &amp;minv, &amp;maxv, &amp;minLoc, &amp;maxLoc, Mat());//求出图像的最大值和最小值。\n        std::cout &lt;&lt;"No.channels:"&lt;&lt;i&lt;&lt;"minvalue:" &lt;&lt; minv &lt;&lt; "maxvalue:" &lt;&lt; maxv &lt;&lt; std::endl;\n    }\n    Mat mean, stddev;\n    meanStdDev(image, mean, stddev);//求出图像的均值和方差\n    std::cout &lt;&lt; "mean:" &lt;&lt; mean &lt;&lt; std::endl;\n    std::cout &lt;&lt; "stddev:" &lt;&lt; stddev &lt;&lt; std::endl;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("h2",{attrs:{id:"_14-图像几何形状的绘制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_14-图像几何形状的绘制"}},[s._v("#")]),s._v(" "),n("strong",[s._v("14 图像几何形状的绘制")])]),s._v(" "),n("p",[s._v("本节课介绍如何绘制椭圆，矩形，直线，圆等")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::drawing_demo(Mat &amp;image)\n{\n    Rect rect;\n    rect.x = 200;\n    rect.y = 200;\n    rect.width = 100;\n    rect.height = 100;\n    Mat bg = Mat::zeros(image.size(),image.type());\n    rectangle(image, rect, Scalar(0, 0, 255), -1, 8, 0);\n    //参数1为绘图的底图或者画布名称，参数2位图片的起始，宽度，高度\n    //参数3代表填充颜色。参数4大于0是线小于0是填充\n    //参数5表示邻域填充，参数6默认值为0\n    circle(bg, Point(350, 400), 15, Scalar(0, 0, 255), 2, LINE_AA, 0);\n    //参数2位图片中心位置，参数3为半径为15的圆\n    Mat dst;\n    //addWeighted(image, 0.7, bg, 0.3, 0, dst);\n    RotatedRect rtt;\n    rtt.center = Point(200, 200);\n    rtt.size = Size(100, 200);\n    rtt.angle = 0.0;\n    line(bg,Point(100,100),Point(350,400), Scalar(0, 0, 255), 8, LINE_AA, 0);//line_AA表示去掉锯齿\n    ellipse(bg,rtt, Scalar(0, 0, 255), 2, 8);\n    imshow("矩形的绘制",bg);\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("h2",{attrs:{id:"_15-随机数与随机颜色"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_15-随机数与随机颜色"}},[s._v("#")]),s._v(" "),n("strong",[s._v("15 随机数与随机颜色")])]),s._v(" "),n("p",[s._v("本节主要介绍如何能产生一个随机数字和随机颜色，并且用线条的方式显示出来。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://pic3.zhimg.com/v2-4f632e8feac51b911773452329640086_b.jpg",alt:""}})]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::random_drawing()\n{\n    Mat canvas = Mat::zeros(Size(512,512), CV_8UC3);\n    int w = canvas.cols;\n    int h = canvas.rows;\n    RNG rng(12345);\n    while (true) \n    {\n        int c = waitKey(10);\n        if (c == 27) \n        {\n            break;\n        }\n        int x1 = rng.uniform(0,canvas.cols);\n        int y1 = rng.uniform(0, h);\n        int x2 = rng.uniform(0, canvas.cols);\n        int y2 = rng.uniform(0, h);\n        int b  = rng.uniform(0, 255);\n        int g  = rng.uniform(0, 255);\n        int r  = rng.uniform(0, 255);\n        canvas = Scalar(0,0,0);\n        line(canvas, Point(x1, y1), Point(x2, y2), Scalar(b,g,r), 8, LINE_AA,0);//line_AA表示去掉锯齿 \n        imshow("随机绘制演示", canvas);\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("h2",{attrs:{id:"_16-多边形填充与绘制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_16-多边形填充与绘制"}},[s._v("#")]),s._v(" "),n("strong",[s._v("16 多边形填充与绘制")])]),s._v(" "),n("p",[s._v("这节课介绍了2种多边形绘制的实现方式。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::polyline_drawing_demo(Mat &amp;image)\n{\n    Mat canvas = Mat::zeros(Size(512, 512), CV_8UC3);\n    Point p1(100, 100);\n    Point p2(350, 100);\n    Point p3(450, 280);\n    Point p4(320, 450);\n    Point p5(80, 400);\n    std::vector&lt;Point>pts;//将5个点装入一个容器内。\n    pts.push_back(p1);//未初始化数组容量，只能用pushback操作\n                      //如果初始化，可以用数组下标操作。\n    pts.push_back(p2);\n    pts.push_back(p3);\n    pts.push_back(p4);\n    pts.push_back(p5);\n    //fillPoly(canvas, pts, Scalar(122, 155, 255), 8, 0);//填充多边形\n    //polylines(canvas, pts, true, Scalar(0, 0, 255), 2, 8, 0);//绘制多边形\n    /*\n    参数1表示画布，参数2表示点集，参数3表示true，参数4颜色\n    参数5表示线宽，参数6表示渲染方式，参数7表示相对左上角（0,0）的位置\n    */\n    //单个API搞定图片的绘制填充\n    std::vector&lt;std::vector&lt;Point>>contours;\n    contours.push_back(pts);\n    drawContours(canvas,contours,-1, Scalar(0, 0, 255),-1);\n    //参数2表示容器名称，参数3为正表示多边形的绘制，为负表示多边形的填充\n    imshow("多边形绘制", canvas);\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("p",[s._v("第一种方式，通过标记各个点，然后存储到容器中，之后对容器中的点进行操作。填充多边形调用fillPoly，绘制多边形调用polylines。第二种方式，使用一个API接口绘制。通过一个容器中的存储的点组成的另一个容器。")]),s._v(" "),n("h2",{attrs:{id:"_17-鼠标操作与响应"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_17-鼠标操作与响应"}},[s._v("#")]),s._v(" "),n("strong",[s._v("17 鼠标操作与响应")])]),s._v(" "),n("p",[s._v("鼠标事件响应与绘制！考察基本的图形绘制编程能力。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//参数1表示鼠标事件。\nPoint sp(-1, -1);//鼠标的开始的位置\nPoint ep(-1, -1);\nMat temp;\nstatic void on_draw(int event,int x,int y,int flags,void *userdata)\n{\n    Mat image = *((Mat*)userdata);\n    if(event == EVENT_LBUTTONDOWN)//如果鼠标的左键按下\n    {\n        sp.x = x;\n        sp.y = y;\n        std::cout &lt;&lt; "start point" &lt;&lt;sp&lt;&lt; std::endl;\n    }\n    elseif (event == EVENT_LBUTTONUP)\n    {\n        ep.x = x;\n        ep.y = y;\n        int dx = ep.x - sp.x;\n        int dy = ep.y - sp.y;\n        if (dx > 0 &amp;&amp; dy > 0) \n        {\n            Rect box(sp.x, sp.y, dx, dy);\n            imshow("ROI区域", image(box));\n            rectangle(image, box, Scalar(0, 0, 255), 2, 8, 0);\n            imshow("鼠标绘制", image);\n            sp.x = -1;\n            sp.y = -1;//复位，为下一次做准备\n        }\n    }\n    elseif (event == EVENT_MOUSEMOVE) \n    {\n        if (sp.x > 0 &amp;&amp; sp.y > 0)\n        {\n            ep.x = x;\n            ep.y = y;\n            int dx = ep.x - sp.x;\n            int dy = ep.y - sp.y;\n            if (dx > 0 &amp;&amp; dy > 0)\n            {\n                Rect box(sp.x, sp.y, dx, dy);\n                temp.copyTo(image);\n                rectangle(image, box, Scalar(0, 0, 255), 2, 8, 0);\n                imshow("鼠标绘制", image);\n            }\n        }\n    }\n}\nvoid QuickDemo::mouse_drawing_demo(Mat &amp;image)\n{\n    namedWindow("鼠标绘制", WINDOW_AUTOSIZE);\n    setMouseCallback("鼠标绘制", on_draw,(void*)(&amp;image));\n    //设置窗口的回调函数。参数1表示名称，参数2表示调用on_draw\n    imshow("鼠标绘制", image);\n    temp = image.clone();\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br")])]),n("h2",{attrs:{id:"_18-图像像素类型的转换与归一化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_18-图像像素类型的转换与归一化"}},[s._v("#")]),s._v(" "),n("strong",[s._v("18 图像像素类型的转换与归一化")])]),s._v(" "),n("p",[s._v("像素值归一化是很常见的预处理方式，OpenCV支持字节与浮点数的图象显示。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::norm_demo(Mat &amp;image)\n{\n    Mat dst;//定义一个名为dst的二值化类型的数据\n    std::cout &lt;&lt; image.type() &lt;&lt; std::endl;//打印出来图片的类型\n    image.convertTo(image,CV_32F);//将dst数据转换成浮点型float32位数据。\n    std::cout &lt;&lt; image.type() &lt;&lt; std::endl;//再次打印转换后的数据类型\n    normalize(image, dst, 1.0, 0, NORM_MINMAX);//进行归一化操作\n    std::cout &lt;&lt; dst.type() &lt;&lt; std::endl;//打印归一化操作之后的数据\n    imshow("图像的归一化", dst);//显示归一化的图像\n    //CV_8UC3 ,CV_32FC3  //3通道每个通道8位的UC类型\n    //转换后 3通道 每个通道32位的浮点数\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h2",{attrs:{id:"_19-图像的放缩与插值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_19-图像的放缩与插值"}},[s._v("#")]),s._v(" "),n("strong",[s._v("19 图像的放缩与插值")])]),s._v(" "),n("p",[s._v("介绍基本的图像变换大小的方法。图像的差值处理主要有线性、双线性差值、卢卡斯差值、双立方差值。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::resize_demo(Mat &amp;image)\n{\n    Mat zoomin, zoomout;\n    int h = image.rows;\n    int w = image.cols;\n    resize(image, zoomin, Size(w/2, h/2),0,0,INTER_LINEAR);\n    //线性差值操作。\n    imshow("zoomin", zoomin);; \n    resize(image, zoomout, Size(w*1.5, h*1.5), 0, 0, INTER_LINEAR);\n    imshow("zoomin", zoomout);//\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h2",{attrs:{id:"_20-图像的翻转"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_20-图像的翻转"}},[s._v("#")]),s._v(" "),n("strong",[s._v("20 图像的翻转")])]),s._v(" "),n("p",[s._v("图像的上下、左右、对角线翻转")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::flip_demo(Mat &amp;image)\n{\n    Mat dst;\n    flip(image, dst, 0);//上下翻转 x对称\n    flip(image, dst, 1);//左右翻转 y对称\n    flip(image, dst, -1);//旋转180°\n    imshow("图像翻转",dst);\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h2",{attrs:{id:"_21-图像的旋转"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_21-图像的旋转"}},[s._v("#")]),s._v(" "),n("strong",[s._v("21 图像的旋转")])]),s._v(" "),n("p",[s._v("图像旋转的基本原理，变换矩阵M的计算，中心位置偏移计算等。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::rotate_demo(Mat &amp;image)\n{\n    Mat dst, M;\n    int h = image.rows;//定义图片的高度\n    int w = image.cols;//定义图片的宽度\n    M = getRotationMatrix2D(Point(w / 2, h / 2),45,1.0);\n    doublecos = abs(M.at&lt;double>(0, 0));\n    doublesin = abs(M.at&lt;double>(0, 1));\n    int nw = cos * w + sin * h;\n    int nh = sin * w + cos * h;\n    M.at&lt;double>(0, 2) += (nw / 2 - w / 2);\n    M.at&lt;double>(1, 2) += (nh / 2 - h / 2);\n    //参数1原来图像的中心位置。参数2角度是多少。参数3是图像本身大小的放大缩小\n    warpAffine(image, dst, M,Size(nw,nh),INTER_LINEAR,0, Scalar(0, 0, 255));\n    imshow("旋转演示", dst);\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("h2",{attrs:{id:"_22-视频文件摄像头使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_22-视频文件摄像头使用"}},[s._v("#")]),s._v(" "),n("strong",[s._v("22 视频文件摄像头使用")])]),s._v(" "),n("p",[s._v("本节介绍了如何读取一个视频，以及调用电脑的摄像头。并且对读取到的视频进行操作。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::video_demo(Mat &amp;image) \n{\n    VideoCapture capture("D:/images/123.mp4");  //读取视频的地址\n    Mat frame;//定义一个二值化的 frame\n\n    while (true)\n    {\n        capture.read(frame); //读取视频\n        //flip(frame, frame, 1);//图像镜像操作\n        if(frame.empty())//如果视频为空的话 跳出操作\n        {\n            break;\n        }\n        imshow("frame", frame);//显示视频\n        colorSpace_Demo(frame);//对视频调用之前的demo\n        int c = waitKey(100);//停顿100ms 做视频处理都是1\n        if (c == 27) { //esc 退出应用程序\n            break;\n        }\n    }\n    capture.release();//释放相机的资源\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("对读取到的视频 操作方式有镜像对称。加各种滤镜等等。")]),s._v(" "),n("h2",{attrs:{id:"_23-视频处理与保存"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_23-视频处理与保存"}},[s._v("#")]),s._v(" "),n("strong",[s._v("23 视频处理与保存")])]),s._v(" "),n("p",[s._v("视频的属性，SD（标清）,HD（高清）,UHD（超清），蓝光。如何读取视频文件，以及读取视频文件的属性，衡量视频处理指标：FPS。保存视频时的编码格式。保存视频的实际size和create的size大小保持一致。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::video_demo(Mat &amp;image) \n{\n    VideoCapture capture("D:/images/123.mp4");\n    int frame_width = capture.get(CAP_PROP_FRAME_WIDTH);//获取视频的宽度\n    int frame_height = capture.get(CAP_PROP_FRAME_HEIGHT);//获取视频的高度\n    int count = capture.get(CAP_PROP_FRAME_COUNT);//视频总的帧数\n    //fps是衡量处理视频的能力\n    double fps = capture.get(CAP_PROP_FPS);\n    std::cout &lt;&lt; "frame width" &lt;&lt; frame_width &lt;&lt; std::endl;\n    std::cout &lt;&lt; "frame height" &lt;&lt; frame_height &lt;&lt; std::endl;\n    std::cout &lt;&lt; "frame FPS" &lt;&lt; fps &lt;&lt; std::endl;\n    std::cout &lt;&lt; "frame count" &lt;&lt; count &lt;&lt; std::endl;\n    VideoWriter writer("D:/test.mp4",capture.get(CAP_PROP_FOURCC),fps,Size(frame_width, frame_height),true);\n    //参数1 保存地址。参数2 获取图片的格式 参数3 图片的帧数 参数4 视频宽高 参数5 真\n    Mat frame;\n    while (true)\n    {\n        capture.read(frame);\n        //flip(frame, frame, 1);//图像镜像操作\n        if(frame.empty())\n        {\n            break;\n        }\n        imshow("frame", frame);\n        colorSpace_Demo(frame);\n        writer.write(frame);\n\n        int c = waitKey(100);//停顿100ms 做视频处理都是1\n        if (c == 27) { //esc 退出应用程序\n            break;\n        }\n    }\n    capture.release();//释放相机的资源\n    writer.release();//释放存放的资源\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br")])]),n("p",[s._v("本节课，介绍了视频的一些基本熟悉，紧接介绍如何获取视频的属性，并且通过特定的格式保存到相应的存储位置上。")]),s._v(" "),n("h2",{attrs:{id:"_24-图像的直方图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_24-图像的直方图"}},[s._v("#")]),s._v(" "),n("strong",[s._v("24 图像的直方图")])]),s._v(" "),n("p",[s._v("直方图是图像的统计学特征。表示了图像的各个像素在0-255出现的频率。图像的平移旋转都不会对性质进行改变。缺点：不能表征一张图像。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://pic1.zhimg.com/v2-796161ffc4ce08bde75fa616ef5839c4_b.jpg",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"_25-直方图的均衡化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_25-直方图的均衡化"}},[s._v("#")]),s._v(" "),n("strong",[s._v("25 直方图的均衡化")])]),s._v(" "),n("p",[s._v("用途：用于图像增强，人脸检测，卫星遥感。均衡化的图像只支持单通道。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://pic4.zhimg.com/v2-fcc0584ba4de6aee2ce9690c7a46432f_b.jpg",alt:""}})]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::histogram_eq_demo(Mat &amp;image)\n{\n    Mat gray;\n    cvtColor(image, gray, COLOR_BGR2GRAY);\n    //直方图均衡化只支持灰度图像，不支持彩色图像。\n    imshow("灰度图像", gray);\n    Mat dst;\n    equalizeHist(gray, dst);\n    imshow("直方图均衡化", dst);\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h2",{attrs:{id:"_26-图像的卷积操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_26-图像的卷积操作"}},[s._v("#")]),s._v(" "),n("strong",[s._v("26 图像的卷积操作")])]),s._v(" "),n("p",[s._v("卷积的作用，高的往下降，低的往上升。但是会造成信息丢失。产生模糊效果。是一种线性操作，点乘，之后相加。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://pic1.zhimg.com/v2-fd5edd582857c43ecdc745336bbdc2dc_b.jpg",alt:""}})]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::blur_demo(Mat &amp;image)\n{\n    Mat dst;\n    blur(image, dst, Size(15, 15), Point(-1, -1));\n    //参数1原始图像，参数2卷积之后的图像，参数3卷积的矩阵大小，支持单行或者单列的卷积操作，参数4卷积的起始点。\n    imshow("图像卷积操作", dst);\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h2",{attrs:{id:"_27-高斯模糊"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_27-高斯模糊"}},[s._v("#")]),s._v(" "),n("strong",[s._v("27 高斯模糊")])]),s._v(" "),n("p",[s._v("中心的数值最大，离中心距离越远，数值越小。高斯卷积数学表达式说明：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://pic2.zhimg.com/v2-bf99fcd35662ea226b1d313885a49431_b.jpg",alt:""}})]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::gaussian_blur_demo(Mat &amp;image)\n{\n    Mat dst;\n    GaussianBlur(image, dst, Size(5, 5), 15);\n    imshow("高斯模糊", dst);\n    //参数1表示初始图像，参数2表示处理后的图像，参数3表示高斯矩阵大小 正数而且是奇数，\n    //参数4表示西格玛x为15 西格玛y为15 \n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h2",{attrs:{id:"_28-高斯双边模糊"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_28-高斯双边模糊"}},[s._v("#")]),s._v(" "),n("strong",[s._v("28 高斯双边模糊")])]),s._v(" "),n("p",[s._v("边缘保留的滤波算法！去噪！")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://pic4.zhimg.com/v2-7776c995155e20da9d7a1297b2d3bd1f_b.jpg",alt:""}})]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void QuickDemo::bifilter_demo(Mat &amp;image)\n{\n    Mat dst;\n    bilateralFilter(image,dst,0,100,0);\n    //参数1代表原图，参数2代表处理之后的图像，参数3色彩空间。参数4表示坐标空间，双边是指 色彩空间和坐标空间。\n    namedWindow("双边模糊", WINDOW_FREERATIO);//创建了一个新窗口，参数1表示名称，第二个参数代表一个自由的比例\n    imshow("双边模糊", dst);//表示显示在新创建的\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h2",{attrs:{id:"_29-实时视频人脸检测"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_29-实时视频人脸检测"}},[s._v("#")]),s._v(" "),n("strong",[s._v("29 实时视频人脸检测")])]),s._v(" "),n("p",[s._v("OpenCV4.x中基于深度神经网络模型的高实时，稳定的人脸检测演示。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://pic2.zhimg.com/v2-56e2fcb72f908449ae4bd4a9edf54e91_b.jpg",alt:""}})]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('dnn::Net net = dnn::readNetFromTensorflow(root_dir+ "opencv_face_detector_uint8.pb", root_dir+"opencv_face_detector.pbtxt");\nVideoCapture capture("D:/images/video/example_dsh.mp4");\nMat frame;\nwhile (true) {\n    capture.read(frame);\n    if (frame.empty()) {\n        break;\n    }\n    Mat blob = dnn::blobFromImage(frame, 1.0, Size(300, 300), Scalar(104, 177, 123), false, false);\n    net.setInput(blob);// NCHW\n    Mat probs = net.forward(); // \n    Mat detectionMat(probs.size[2], probs.size[3], CV_32F, probs.ptr&lt;float>());\n    // 解析结果\n    for (int i = 0; i &lt; detectionMat.rows; i++) {\n        float confidence = detectionMat.at&lt;float>(i, 2);\n        if (confidence > 0.5) {\n            int x1 = static_cast&lt;int>(detectionMat.at&lt;float>(i, 3)*frame.cols);\n            int y1 = static_cast&lt;int>(detectionMat.at&lt;float>(i, 4)*frame.rows);\n            int x2 = static_cast&lt;int>(detectionMat.at&lt;float>(i, 5)*frame.cols);\n            int y2 = static_cast&lt;int>(detectionMat.at&lt;float>(i, 6)*frame.rows);\n            Rect box(x1, y1, x2 - x1, y2 - y1);\n            rectangle(frame, box, Scalar(0, 0, 255), 2, 8, 0);\n        }\n    }\n    imshow("人脸检测演示", frame);\n    int c = waitKey(1);\n    if (c == 27) { // 退出\n        break;\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);