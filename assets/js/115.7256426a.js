(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{433:function(s,e,a){"use strict";a.r(e);var n=a(11),t=Object(n.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"第一章-开始"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一章-开始"}},[s._v("#")]),s._v(" 第一章 开始")]),s._v(" "),e("h2",{attrs:{id:"熟悉编译器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#熟悉编译器"}},[s._v("#")]),s._v(" 熟悉编译器")]),s._v(" "),e("p",[e("strong",[s._v("g++")]),s._v("：")]),s._v(" "),e("ul",[e("li",[s._v("编译："),e("code",[s._v("g++ --std=c++11 ch01.cpp -o main")])]),s._v(" "),e("li",[s._v("运行："),e("code",[s._v("./prog1")])]),s._v(" "),e("li",[s._v("查看运行状态："),e("code",[s._v("echo $?")])]),s._v(" "),e("li",[s._v("编译多个文件:"),e("code",[s._v("g++ ch2.cpp Sales_item.cc -o main")])])]),s._v(" "),e("p",[s._v("输入 "),e("code",[s._v("g++ --help")]),s._v("，查看编译器选项：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("Usage: g++ [options] file...\nOptions:\n  -pass-exit-codes         Exit with highest error code from a phase\n  --help                   Display this information\n  --target-help            Display target specific command line options\n  --help={common|optimizers|params|target|warnings|[^]{joined|separate|undocumented}}[,...]\n                           Display specific types of command line options\n  (Use '-v --help' to display command line options of sub-processes)\n  --version                Display compiler version information\n  -dumpspecs               Display all of the built in spec strings\n  -dumpversion             Display the version of the compiler\n  -dumpmachine             Display the compiler's target processor\n  -print-search-dirs       Display the directories in the compiler's search path\n  -print-libgcc-file-name  Display the name of the compiler's companion library\n  -print-file-name=<lib>   Display the full path to library <lib>\n  -print-prog-name=<prog>  Display the full path to compiler component <prog>\n  -print-multiarch         Display the target's normalized GNU triplet, used as\n                           a component in the library path\n  -print-multi-directory   Display the root directory for versions of libgcc\n  -print-multi-lib         Display the mapping between command line options and\n                           multiple library search directories\n  -print-multi-os-directory Display the relative path to OS libraries\n  -print-sysroot           Display the target libraries directory\n  -print-sysroot-headers-suffix Display the sysroot suffix used to find headers\n  -Wa,<options>            Pass comma-separated <options> on to the assembler\n  -Wp,<options>            Pass comma-separated <options> on to the preprocessor\n  -Wl,<options>            Pass comma-separated <options> on to the linker\n  -Xassembler <arg>        Pass <arg> on to the assembler\n  -Xpreprocessor <arg>     Pass <arg> on to the preprocessor\n  -Xlinker <arg>           Pass <arg> on to the linker\n  -save-temps              Do not delete intermediate files\n  -save-temps=<arg>        Do not delete intermediate files\n  -no-canonical-prefixes   Do not canonicalize paths when building relative\n                           prefixes to other gcc components\n  -pipe                    Use pipes rather than intermediate files\n  -time                    Time the execution of each subprocess\n  -specs=<file>            Override built-in specs with the contents of <file>\n  -std=<standard>          Assume that the input sources are for <standard>\n  --sysroot=<directory>    Use <directory> as the root directory for headers\n                           and libraries\n  -B <directory>           Add <directory> to the compiler's search paths\n  -v                       Display the programs invoked by the compiler\n  -###                     Like -v but options quoted and commands not executed\n  -E                       Preprocess only; do not compile, assemble or link\n  -S                       Compile only; do not assemble or link\n  -c                       Compile and assemble, but do not link\n  -o <file>                Place the output into <file>\n  -pie                     Create a position independent executable\n  -shared                  Create a shared library\n  -x <language>            Specify the language of the following input files\n                           Permissible languages include: c c++ assembler none\n                           'none' means revert to the default behavior of\n                           guessing the language based on the file's extension\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br")])]),e("p",[s._v("输入 "),e("code",[s._v("g++ -v --help")]),s._v("可以看到更完整的指令。\n例如还有些常用的：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("-h FILENAME, -soname FILENAME: Set internal name of shared library\n-I PROGRAM, --dynamic-linker PROGRAM: Set PROGRAM as the dynamic linker to use\n-l LIBNAME, --library LIBNAME: Search for library LIBNAME\n-L DIRECTORY, --library-path DIRECTORY: Add DIRECTORY to library search path\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("获得程序状态")]),s._v(":")]),s._v(" "),e("ul",[e("li",[s._v("windows: "),e("code",[s._v("echo %ERRORLEVEL%")])]),s._v(" "),e("li",[s._v("UNIX: "),e("code",[s._v("echo $?")])])]),s._v(" "),e("h2",{attrs:{id:"io"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#io"}},[s._v("#")]),s._v(" IO")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("#include <iostream>")])]),s._v(" "),e("li",[e("code",[s._v('std::cout << "hello"')])]),s._v(" "),e("li",[e("code",[s._v("std::cin >> v1")])])]),s._v(" "),e("p",[s._v("记住"),e("code",[s._v(">>")]),s._v("和"),e("code",[s._v("<<")]),s._v("返回的结果都是左操作数，也就是输入流和输出流本身。")]),s._v(" "),e("p",[e("strong",[s._v("endl")]),s._v("：这是一个被称为"),e("strong",[s._v("操纵符")]),s._v("（manipulator）的特殊值，效果是结束当前行，并将设备关联的缓冲区（buffer）中的内容刷到设备中。")]),s._v(" "),e("p",[s._v("UNIX和Mac下键盘输入文件结束符："),e("code",[s._v("ctrl+d")]),s._v("，Windows下："),e("code",[s._v("ctrl+z")])]),s._v(" "),e("p",[e("strong",[s._v("头文件")]),s._v("：类的类型一般存储在头文件中，标准库的头文件使用"),e("code",[s._v("<>")]),s._v("，非标准库的头文件使用"),e("code",[s._v('""')]),s._v("。申明写在"),e("code",[s._v(".h")]),s._v("文件，定义实现写在"),e("code",[s._v(".cpp")]),s._v("文件。")]),s._v(" "),e("p",[e("strong",[s._v("避免多次包含同一头文件")]),s._v("：")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifndef")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token expression"}},[s._v("SALESITEM_H")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("SALESITEM_H")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Definition of Sales_itemclass and related functions goes here")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("成员函数（类方法）")]),s._v("：使用"),e("code",[s._v(".")]),s._v("调用。")]),s._v(" "),e("p",[e("strong",[s._v("命名空间（namespace）")]),s._v("：使用作用域运算符"),e("code",[s._v("::")]),s._v("调用。")]),s._v(" "),e("h2",{attrs:{id:"注释"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[s._v("#")]),s._v(" 注释")]),s._v(" "),e("ul",[e("li",[s._v("单行注释： "),e("code",[s._v("//")])]),s._v(" "),e("li",[s._v("多行注释： "),e("code",[s._v("/**/")]),s._v("。编译器将"),e("code",[s._v("/*")]),s._v("和"),e("code",[s._v("*/")]),s._v("之间的内容都作为注释内容忽略。注意不能嵌套。")])]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("SALESITEM_H")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * 多行注释格式\n * 每一行加一个*\n */")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"while语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#while语句"}},[s._v("#")]),s._v(" while语句")]),s._v(" "),e("p",[s._v("循环执行，（直到条件（condition）为假。")]),s._v(" "),e("h2",{attrs:{id:"for语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for语句"}},[s._v("#")]),s._v(" for语句")]),s._v(" "),e("p",[s._v("循环头由三部分组成：")]),s._v(" "),e("ul",[e("li",[s._v("一个初始化语句（init-statement）")]),s._v(" "),e("li",[s._v("一个循环条件（condition）")]),s._v(" "),e("li",[s._v("一个表达式（expression）")])]),s._v(" "),e("h2",{attrs:{id:"使用文件重定向"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用文件重定向"}},[s._v("#")]),s._v(" 使用文件重定向")]),s._v(" "),e("p",[e("code",[s._v("./main <infile >outfile")])])])}),[],!1,null,null,null);e.default=t.exports}}]);