(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{496:function(t,a,s){"use strict";s.r(a);var n=s(11),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"目标："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标："}},[t._v("#")]),t._v(" 目标：")]),t._v(" "),a("ul",[a("li",[t._v("Canny边缘检测的概念")]),t._v(" "),a("li",[t._v("OpenCV的功能："),a("code",[t._v("cv.Canny()")])])]),t._v(" "),a("h2",{attrs:{id:"理论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#理论"}},[t._v("#")]),t._v(" 理论")]),t._v(" "),a("p",[t._v("Canny边缘检测是一种流行的边缘检测算法，它是由John F. Canny开发的。")]),t._v(" "),a("h4",{attrs:{id:"_1-这是一个多阶段算法，我们将了解其中的每个阶段。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-这是一个多阶段算法，我们将了解其中的每个阶段。"}},[t._v("#")]),t._v(" 1. 这是一个多阶段算法，我们将了解其中的每个阶段。")]),t._v(" "),a("h4",{attrs:{id:"_2-降噪"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-降噪"}},[t._v("#")]),t._v(" 2. 降噪")]),t._v(" "),a("p",[t._v("由于边缘检测易受图像中的噪声影响，因此第一步是使用5x5高斯滤波器去除图像中的噪声。我们在之前的章节中已经看到了这一点。")]),t._v(" "),a("h4",{attrs:{id:"_3-计算图像的强度梯度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-计算图像的强度梯度"}},[t._v("#")]),t._v(" 3. 计算图像的强度梯度")]),t._v(" "),a("p",[t._v("然后在水平和垂直方向上用Sobel核对平滑后的图像进行滤波，以获得水平方向($$ G_{x} $$)和垂直方向($$ G_{y} $$)的一阶导数。从这两个图像中，我们可以找到每个像素的边缘梯度和方向，如下所示：")]),t._v(" "),a("p",[t._v("$$ Edge_Gradient\\left ( G \\right )= \\sqrt{G_{x}^{2}+G_{y}^{2}} $$")]),t._v(" "),a("p",[t._v("$$ Angle\\left ( \\theta  \\right )= tan^{-1}\\left ( \\frac{G_{y}}{G_{x}} \\right ) $$")]),t._v(" "),a("p",[t._v("渐变方向始终垂直于边缘。梯度方向被归为四类：垂直，水平，和两个对角线。")]),t._v(" "),a("h4",{attrs:{id:"_4-非极大值抑制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-非极大值抑制"}},[t._v("#")]),t._v(" 4. 非极大值抑制")]),t._v(" "),a("p",[t._v("在获得梯度的大小和方向之后，完成图像的全扫描以去除可能不构成边缘的任何不需要的像素。为此，在每个像素处，检查像素是否是其在梯度方向上的邻域中的局部最大值。检查下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/TonyStark1997/OpenCV-Python/master/4.Image%20Processing%20in%20OpenCV/Image/image24.png",alt:"image24"}})]),t._v(" "),a("p",[t._v("A点位于边缘（垂直方向）。渐变方向与边缘垂直。B点和C点处于梯度方向。因此，用点B和C检查点A，看它是否形成局部最大值。如果是这样，则考虑下一阶段，否则，它被抑制（置零）。")]),t._v(" "),a("p",[t._v("简而言之，你得到的结果是具有“细边”的二进制图像。")]),t._v(" "),a("h4",{attrs:{id:"_5-滞后阈值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-滞后阈值"}},[t._v("#")]),t._v(" 5. 滞后阈值")]),t._v(" "),a("p",[t._v("这个阶段决定哪些边缘都是边缘，哪些边缘不是边缘。为此，我们需要两个阈值，minVal和maxVal。强度梯度大于maxVal的任何边缘肯定是边缘，而minVal以下的边缘肯定是非边缘的，因此被丢弃。位于这两个阈值之间的人是基于其连通性的分类边缘或非边缘。如果它们连接到“可靠边缘”像素，则它们被视为边缘的一部分。否则，他们也被丢弃。见下图：\n"),a("img",{attrs:{src:"https://docs.opencv.org/4.0.0/nms.jpg",alt:"image25"}}),t._v("\n边缘A高于maxVal，因此被视为“确定边缘”。虽然边C低于maxVal，但它连接到边A，因此也被视为有效边，我们得到完整的曲线。但边缘B虽然高于minVal并且与边缘C的区域相同，但它没有连接到任何“可靠边缘”，因此被丢弃。所以我们必须相应地选择minVal和maxVal才能获得正确的结果。\n假设边是长线，这个阶段也会消除小像素噪声。\n所以我们最终得到的是图像中的强边缘。")]),t._v(" "),a("h2",{attrs:{id:"opencv中的canny边缘检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#opencv中的canny边缘检测"}},[t._v("#")]),t._v(" OpenCV中的Canny边缘检测")]),t._v(" "),a("p",[t._v("OpenCV将以上所有步骤放在单个函数"),a("code",[t._v("cv.Canny()")]),t._v("中。我们将看到如何使用它。第一个参数是我们的输入图像。第二个和第三个参数分别是我们的minVal和maxVal。第三个参数是aperture_size,它是用于查找图像渐变的Sobel卷积核的大小。默认情况下它是3。最后一个参数是L2gradient，它指定用于查找梯度幅度的等式。如果它是True，它使用上面提到的更准确的等式，否则它使用这个函数：$$ Edge_Gradient\\left ( G \\right )= \\left | G_{x} \\right |+\\left | G_{y} \\right | $$。默认情况下，它为False。")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" numpy "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" np\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" cv2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" cv\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" matplotlib "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" pyplot "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" plt\n\nimg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("imread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'messi5.jpg'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nedges "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Canny"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nplt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subplot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("121")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("plt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("imshow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cmap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gray'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nplt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Original Image'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" plt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xticks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" plt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("yticks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nplt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subplot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("122")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("plt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("imshow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("edges"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cmap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gray'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nplt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Edge Image'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" plt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xticks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" plt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("yticks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nplt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("show"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[t._v("窗口将如下图显示：\n"),a("img",{attrs:{src:"https://docs.opencv.org/4.0.0/canny1.jpg",alt:"image26"}})])])}),[],!1,null,null,null);a.default=r.exports}}]);