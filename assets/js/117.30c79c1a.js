(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{434:function(v,_,t){"use strict";t.r(_);var e=t(11),d=Object(e.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"第三章-字符串、向量和数组"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第三章-字符串、向量和数组"}},[v._v("#")]),v._v(" 第三章 字符串、向量和数组")]),v._v(" "),_("h2",{attrs:{id:"using声明"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#using声明"}},[v._v("#")]),v._v(" using声明")]),v._v(" "),_("ul",[_("li",[v._v("使用某个命名空间：例如 "),_("code",[v._v("using std::cin")]),v._v("表示使用命名空间"),_("code",[v._v("std")]),v._v("中的名字"),_("code",[v._v("cin")]),v._v("。")]),v._v(" "),_("li",[v._v("头文件中不应该包含"),_("code",[v._v("using")]),v._v("声明。这样使用了该头文件的源码也会使用这个声明，会带来风险。")])]),v._v(" "),_("h2",{attrs:{id:"string"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[v._v("#")]),v._v(" string")]),v._v(" "),_("ul",[_("li",[v._v("标准库类型"),_("code",[v._v("string")]),v._v("表示可变长的字符序列。")]),v._v(" "),_("li",[_("code",[v._v("#include <string>")]),v._v("，然后 "),_("code",[v._v("using std::string;")])]),v._v(" "),_("li",[_("strong",[v._v("string对象")]),v._v("：注意，不同于字符串字面值。")])]),v._v(" "),_("h3",{attrs:{id:"定义和初始化string对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#定义和初始化string对象"}},[v._v("#")]),v._v(" 定义和初始化string对象")]),v._v(" "),_("p",[v._v("初始化"),_("code",[v._v("string")]),v._v("对象的方式：")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("方式")]),v._v(" "),_("th",[v._v("解释")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[_("code",[v._v("string s1")])]),v._v(" "),_("td",[v._v("默认初始化，"),_("code",[v._v("s1")]),v._v("是个空字符串")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("string s2(s1)")])]),v._v(" "),_("td",[_("code",[v._v("s2")]),v._v("是"),_("code",[v._v("s1")]),v._v("的副本")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("string s2 = s1")])]),v._v(" "),_("td",[v._v("等价于"),_("code",[v._v("s2(s1)")]),v._v("，"),_("code",[v._v("s2")]),v._v("是"),_("code",[v._v("s1")]),v._v("的副本")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v('string s3("value")')])]),v._v(" "),_("td",[_("code",[v._v("s3")]),v._v("是字面值“value”的副本，除了字面值最后的那个空字符外")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v('string s3 = "value"')])]),v._v(" "),_("td",[v._v("等价于"),_("code",[v._v('s3("value")')]),v._v("，"),_("code",[v._v("s3")]),v._v('是字面值"value"的副本')])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("string s4(n, 'c')")])]),v._v(" "),_("td",[v._v("把"),_("code",[v._v("s4")]),v._v("初始化为由连续"),_("code",[v._v("n")]),v._v("个字符"),_("code",[v._v("c")]),v._v("组成的串")])])])]),v._v(" "),_("ul",[_("li",[v._v("拷贝初始化（copy initialization）：使用等号"),_("code",[v._v("=")]),v._v("将一个已有的对象拷贝到正在创建的对象。")]),v._v(" "),_("li",[v._v("直接初始化（direct initialization）：通过括号给对象赋值。")])]),v._v(" "),_("h3",{attrs:{id:"string对象上的操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#string对象上的操作"}},[v._v("#")]),v._v(" string对象上的操作")]),v._v(" "),_("p",[_("code",[v._v("string")]),v._v("的操作：")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("操作")]),v._v(" "),_("th",[v._v("解释")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[_("code",[v._v("os << s")])]),v._v(" "),_("td",[v._v("将"),_("code",[v._v("s")]),v._v("写到输出流"),_("code",[v._v("os")]),v._v("当中，返回"),_("code",[v._v("os")])])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("is >> s")])]),v._v(" "),_("td",[v._v("从"),_("code",[v._v("is")]),v._v("中读取字符串赋给"),_("code",[v._v("s")]),v._v("，字符串以空白分割，返回"),_("code",[v._v("is")])])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("getline(is, s)")])]),v._v(" "),_("td",[v._v("从"),_("code",[v._v("is")]),v._v("中读取一行赋给"),_("code",[v._v("s")]),v._v("，返回"),_("code",[v._v("is")])])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("s.empty()")])]),v._v(" "),_("td",[_("code",[v._v("s")]),v._v("为空返回"),_("code",[v._v("true")]),v._v("，否则返回"),_("code",[v._v("false")])])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("s.size()")])]),v._v(" "),_("td",[v._v("返回"),_("code",[v._v("s")]),v._v("中字符的个数")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("s[n]")])]),v._v(" "),_("td",[v._v("返回"),_("code",[v._v("s")]),v._v("中第"),_("code",[v._v("n")]),v._v("个字符的引用，位置"),_("code",[v._v("n")]),v._v("从0计起")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("s1+s2")])]),v._v(" "),_("td",[v._v("返回"),_("code",[v._v("s1")]),v._v("和"),_("code",[v._v("s2")]),v._v("连接后的结果")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("s1=s2")])]),v._v(" "),_("td",[v._v("用"),_("code",[v._v("s2")]),v._v("的副本代替"),_("code",[v._v("s1")]),v._v("中原来的字符")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("s1==s2")])]),v._v(" "),_("td",[v._v("如果"),_("code",[v._v("s1")]),v._v("和"),_("code",[v._v("s2")]),v._v("中所含的字符完全一样，则它们相等；"),_("code",[v._v("string")]),v._v("对象的相等性判断对字母的大小写敏感")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("s1!=s2")])]),v._v(" "),_("td",[v._v("同上")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("<")]),v._v(", "),_("code",[v._v("<=")]),v._v(", "),_("code",[v._v(">")]),v._v(", "),_("code",[v._v(">=")])]),v._v(" "),_("td",[v._v("利用字符在字典中的顺序进行比较，且对字母的大小写敏感（对第一个不相同的位置进行比较）")])])])]),v._v(" "),_("ul",[_("li",[v._v("string io：\n"),_("ul",[_("li",[v._v("执行读操作"),_("code",[v._v(">>")]),v._v("：忽略掉开头的空白（包括空格、换行符和制表符），直到遇到下一处空白为止。")]),v._v(" "),_("li",[_("code",[v._v("getline")]),v._v("：读取一整行，"),_("strong",[v._v("包括空白符")]),v._v("。")])])]),v._v(" "),_("li",[_("code",[v._v("s.size()")]),v._v("返回的时"),_("code",[v._v("string::size_type")]),v._v("类型，记住是一个"),_("strong",[v._v("无符号")]),v._v("类型的值，不要和"),_("code",[v._v("int")]),v._v("混用")]),v._v(" "),_("li",[_("code",[v._v("s1+s2")]),v._v("使用时，保证至少一侧是string类型。"),_("code",[v._v('string s1 = "hello" + "world" // 错误，两侧均为字符串字面值')])]),v._v(" "),_("li",[_("strong",[v._v("字符串字面值和string是不同的类型。")])])]),v._v(" "),_("h3",{attrs:{id:"处理string对象中的字符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#处理string对象中的字符"}},[v._v("#")]),v._v(" 处理string对象中的字符")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("ctype.h vs. cctype")]),v._v("：C++修改了c的标准库，名称为去掉"),_("code",[v._v(".h")]),v._v("，前面加"),_("code",[v._v("c")]),v._v("。\n"),_("blockquote",[_("p",[v._v("如c++版本为"),_("code",[v._v("cctype")]),v._v("，c版本为"),_("code",[v._v("ctype.h")])])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("尽量使用c++版本的头文件")]),v._v("，即"),_("code",[v._v("cctype")])])])])]),v._v(" "),_("p",[_("code",[v._v("cctype")]),v._v("头文件中定义了一组标准函数：")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("函数")]),v._v(" "),_("th",[v._v("解释")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[_("code",[v._v("isalnum(c)")])]),v._v(" "),_("td",[v._v("当"),_("code",[v._v("c")]),v._v("是字母或数字时为真")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("isalpha(c)")])]),v._v(" "),_("td",[v._v("当"),_("code",[v._v("c")]),v._v("是字母时为真")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("iscntrl(c)")])]),v._v(" "),_("td",[v._v("当"),_("code",[v._v("c")]),v._v("是控制字符时为真")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("isdigit(c)")])]),v._v(" "),_("td",[v._v("当"),_("code",[v._v("c")]),v._v("是数字时为真")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("isgraph(c)")])]),v._v(" "),_("td",[v._v("当"),_("code",[v._v("c")]),v._v("不是空格但可以打印时为真")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("islower(c)")])]),v._v(" "),_("td",[v._v("当"),_("code",[v._v("c")]),v._v("是小写字母时为真")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("isprint(c)")])]),v._v(" "),_("td",[v._v("当"),_("code",[v._v("c")]),v._v("是可打印字符时为真")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("ispunct(c)")])]),v._v(" "),_("td",[v._v("当"),_("code",[v._v("c")]),v._v("是标点符号时为真")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("isspace(c)")])]),v._v(" "),_("td",[v._v("当"),_("code",[v._v("c")]),v._v("是空白时为真（空格、横向制表符、纵向制表符、回车符、换行符、进纸符）")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("isupper(c)")])]),v._v(" "),_("td",[v._v("当"),_("code",[v._v("c")]),v._v("是大写字母时为真")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("isxdigit(c)")])]),v._v(" "),_("td",[v._v("当"),_("code",[v._v("c")]),v._v("是十六进制数字时为真")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("tolower(c)")])]),v._v(" "),_("td",[v._v("当"),_("code",[v._v("c")]),v._v("是大写字母，输出对应的小写字母；否则原样输出"),_("code",[v._v("c")])])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("toupper(c)")])]),v._v(" "),_("td",[v._v("当"),_("code",[v._v("c")]),v._v("是小写字母，输出对应的大写字母；否则原样输出"),_("code",[v._v("c")])])])])]),v._v(" "),_("ul",[_("li",[v._v("遍历字符串：使用"),_("strong",[v._v("范围for")]),v._v("（range for）语句： "),_("code",[v._v("for (auto c: str)")]),v._v("，或者 "),_("code",[v._v("for (auto &c: str)")]),v._v("使用引用直接改变字符串中的字符。 （C++11）")]),v._v(" "),_("li",[_("code",[v._v("str[x]")]),v._v(",[]输入参数为"),_("code",[v._v("string::size_type")]),v._v("类型，给出"),_("code",[v._v("int")]),v._v("整型也会自动转化为该类型")])]),v._v(" "),_("h2",{attrs:{id:"vector"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vector"}},[v._v("#")]),v._v(" vector")]),v._v(" "),_("ul",[_("li",[v._v("vector是一个"),_("strong",[v._v("容器")]),v._v("，也是一个类模板；")]),v._v(" "),_("li",[_("code",[v._v("#include <vector>")]),v._v(" 然后 "),_("code",[v._v("using std::vector;")])]),v._v(" "),_("li",[v._v("容器：包含其他对象。")]),v._v(" "),_("li",[v._v("类模板：本身不是类，但可以"),_("strong",[v._v("实例化instantiation")]),v._v("出一个类。 "),_("code",[v._v("vector")]),v._v("是一个模板， "),_("code",[v._v("vector<int>")]),v._v("是一个类型。")]),v._v(" "),_("li",[v._v("通过将类型放在类模板名称后面的"),_("strong",[v._v("尖括号")]),v._v("中来指定"),_("strong",[v._v("类型")]),v._v("，如"),_("code",[v._v("vector<int> ivec")]),v._v("。")])]),v._v(" "),_("h3",{attrs:{id:"定义和初始化vector对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#定义和初始化vector对象"}},[v._v("#")]),v._v(" 定义和初始化vector对象")]),v._v(" "),_("p",[v._v("初始化"),_("code",[v._v("vector")]),v._v("对象的方法")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("方法")]),v._v(" "),_("th",[v._v("解释")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[_("code",[v._v("vector<T> v1")])]),v._v(" "),_("td",[_("code",[v._v("v1")]),v._v("是一个空"),_("code",[v._v("vector")]),v._v("，它潜在的元素是"),_("code",[v._v("T")]),v._v("类型的，执行默认初始化")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("vector<T> v2(v1)")])]),v._v(" "),_("td",[_("code",[v._v("v2")]),v._v("中包含有"),_("code",[v._v("v1")]),v._v("所有元素的副本")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("vector<T> v2 = v1")])]),v._v(" "),_("td",[v._v("等价于"),_("code",[v._v("v2(v1)")]),v._v("，"),_("code",[v._v("v2")]),v._v("中包含"),_("code",[v._v("v1")]),v._v("所有元素的副本")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("vector<T> v3(n, val)")])]),v._v(" "),_("td",[_("code",[v._v("v3")]),v._v("包含了n个重复的元素，每个元素的值都是"),_("code",[v._v("val")])])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("vector<T> v4(n)")])]),v._v(" "),_("td",[_("code",[v._v("v4")]),v._v("包含了n个重复地执行了值初始化的对象")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("vector<T> v5{a, b, c...}")])]),v._v(" "),_("td",[_("code",[v._v("v5")]),v._v("包含了初始值个数的元素，每个元素被赋予相应的初始值")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("vector<T> v5={a, b, c...}")])]),v._v(" "),_("td",[v._v("等价于"),_("code",[v._v("v5{a, b, c...}")])])])])]),v._v(" "),_("ul",[_("li",[v._v("列表初始化： "),_("code",[v._v('vector<string> v{"a", "an", "the"};')]),v._v(" （C++11）")])]),v._v(" "),_("h3",{attrs:{id:"向vector对象中添加元素"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#向vector对象中添加元素"}},[v._v("#")]),v._v(" 向vector对象中添加元素")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("v.push_back(e)")]),v._v(" 在尾部增加元素。")])]),v._v(" "),_("h3",{attrs:{id:"其他vector操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其他vector操作"}},[v._v("#")]),v._v(" 其他vector操作")]),v._v(" "),_("p",[_("code",[v._v("vector")]),v._v("支持的操作：")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("操作")]),v._v(" "),_("th",[v._v("解释")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[_("code",[v._v("v.emtpy()")])]),v._v(" "),_("td",[v._v("如果"),_("code",[v._v("v")]),v._v("不含有任何元素，返回真；否则返回假")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("v.size()")])]),v._v(" "),_("td",[v._v("返回"),_("code",[v._v("v")]),v._v("中元素的个数")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("v.push_back(t)")])]),v._v(" "),_("td",[v._v("向"),_("code",[v._v("v")]),v._v("的尾端添加一个值为"),_("code",[v._v("t")]),v._v("的元素")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("v[n]")])]),v._v(" "),_("td",[v._v("返回"),_("code",[v._v("v")]),v._v("中第"),_("code",[v._v("n")]),v._v("个位置上元素的"),_("strong",[v._v("引用")])])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("v1 = v2")])]),v._v(" "),_("td",[v._v("用"),_("code",[v._v("v2")]),v._v("中的元素拷贝替换"),_("code",[v._v("v1")]),v._v("中的元素")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("v1 = {a,b,c...}")])]),v._v(" "),_("td",[v._v("用列表中元素的拷贝替换"),_("code",[v._v("v1")]),v._v("中的元素")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("v1 == v2")])]),v._v(" "),_("td",[_("code",[v._v("v1")]),v._v("和"),_("code",[v._v("v2")]),v._v("相等当且仅当它们的元素数量相同且对应位置的元素值都相同")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("v1 != v2")])]),v._v(" "),_("td",[v._v("同上")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("<")]),v._v(","),_("code",[v._v("<=")]),v._v(","),_("code",[v._v(">")]),v._v(", "),_("code",[v._v(">=")])]),v._v(" "),_("td",[v._v("以字典顺序进行比较")])])])]),v._v(" "),_("ul",[_("li",[v._v("范围"),_("code",[v._v("for")]),v._v("语句内不应该改变其遍历序列的大小。")]),v._v(" "),_("li",[_("code",[v._v("vector")]),v._v("对象（以及"),_("code",[v._v("string")]),v._v("对象）的下标运算符，只能对确知已存在的元素执行下标操作，不能用于添加元素。")])]),v._v(" "),_("h2",{attrs:{id:"迭代器iterator"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#迭代器iterator"}},[v._v("#")]),v._v(" 迭代器iterator")]),v._v(" "),_("ul",[_("li",[v._v("所有标准库容器都可以使用迭代器。")]),v._v(" "),_("li",[v._v("类似于指针类型，迭代器也提供了对对象的间接访问。")])]),v._v(" "),_("h3",{attrs:{id:"使用迭代器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#使用迭代器"}},[v._v("#")]),v._v(" 使用迭代器")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("vector<int>::iterator iter")]),v._v("。")]),v._v(" "),_("li",[_("code",[v._v("auto b = v.begin();")]),v._v("返回指向第一个元素的迭代器。")]),v._v(" "),_("li",[_("code",[v._v("auto e = v.end();")]),v._v("返回指向最后一个元素的下一个（哨兵，尾后,one past the end）的迭代器（off the end）。")]),v._v(" "),_("li",[v._v("如果容器为空， "),_("code",[v._v("begin()")]),v._v("和 "),_("code",[v._v("end()")]),v._v("返回的是同一个迭代器，都是尾后迭代器。")]),v._v(" "),_("li",[v._v("使用解引用符"),_("code",[v._v("*")]),v._v("访问迭代器指向的元素。")]),v._v(" "),_("li",[v._v("养成使用迭代器和"),_("code",[v._v("!=")]),v._v("的习惯（泛型编程）。")]),v._v(" "),_("li",[_("strong",[v._v("容器")]),v._v("：可以包含其他对象；但所有的对象必须类型相同。")]),v._v(" "),_("li",[_("strong",[v._v("迭代器（iterator）")]),v._v("：每种标准容器都有自己的迭代器。"),_("code",[v._v("C++")]),v._v("倾向于用迭代器而不是下标遍历元素。")]),v._v(" "),_("li",[_("strong",[v._v("const_iterator")]),v._v("：只能读取容器内元素不能改变。")]),v._v(" "),_("li",[_("strong",[v._v("箭头运算符")]),v._v("： 解引用 + 成员访问，"),_("code",[v._v("it->mem")]),v._v("等价于 "),_("code",[v._v("(*it).mem")])]),v._v(" "),_("li",[_("strong",[v._v("谨记")]),v._v("：但凡是使用了"),_("strong",[v._v("迭代器")]),v._v("的循环体，都"),_("strong",[v._v("不要")]),v._v("向迭代器所属的容器"),_("strong",[v._v("添加元素")]),v._v("。")])]),v._v(" "),_("p",[v._v("标准容器迭代器的运算符:")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("运算符")]),v._v(" "),_("th",[v._v("解释")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[_("code",[v._v("*iter")])]),v._v(" "),_("td",[v._v("返回迭代器"),_("code",[v._v("iter")]),v._v("所指向的"),_("strong",[v._v("元素的引用")])])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("iter->mem")])]),v._v(" "),_("td",[v._v("等价于"),_("code",[v._v("(*iter).mem")])])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("++iter")])]),v._v(" "),_("td",[v._v("令"),_("code",[v._v("iter")]),v._v("指示容器中的下一个元素")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("--iter")])]),v._v(" "),_("td",[v._v("令"),_("code",[v._v("iter")]),v._v("指示容器中的上一个元素")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("iter1 == iter2")])]),v._v(" "),_("td",[v._v("判断两个迭代器是否相等")])])])]),v._v(" "),_("h3",{attrs:{id:"迭代器运算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#迭代器运算"}},[v._v("#")]),v._v(" 迭代器运算")]),v._v(" "),_("p",[_("code",[v._v("vector")]),v._v("和"),_("code",[v._v("string")]),v._v("迭代器支持的运算：")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("运算符")]),v._v(" "),_("th",[v._v("解释")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[_("code",[v._v("iter + n")])]),v._v(" "),_("td",[v._v("迭代器加上一个整数值仍得到一个迭代器，迭代器指示的新位置和原来相比向前移动了若干个元素。结果迭代器或者指示容器内的一个元素，或者指示容器尾元素的下一位置。")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("iter - n")])]),v._v(" "),_("td",[v._v("迭代器减去一个整数仍得到一个迭代器，迭代器指示的新位置比原来向后移动了若干个元素。结果迭代器或者指向容器内的一个元素，或者指示容器尾元素的下一位置。")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("iter1 += n")])]),v._v(" "),_("td",[v._v("迭代器加法的复合赋值语句，将"),_("code",[v._v("iter1")]),v._v("加n的结果赋给"),_("code",[v._v("iter1")])])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("iter1 -= n")])]),v._v(" "),_("td",[v._v("迭代器减法的复合赋值语句，将"),_("code",[v._v("iter2")]),v._v("减n的结果赋给"),_("code",[v._v("iter1")])])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("iter1 - iter2")])]),v._v(" "),_("td",[v._v("两个迭代器相减的结果是它们之间的距离，也就是说，将运算符右侧的迭代器向前移动差值个元素后得到左侧的迭代器。参与运算的两个迭代器必须指向的是同一个容器中的元素或者尾元素的下一位置。")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v(">")]),v._v("、"),_("code",[v._v(">=")]),v._v("、"),_("code",[v._v("<")]),v._v("、"),_("code",[v._v("<=")])]),v._v(" "),_("td",[v._v("迭代器的关系运算符，如果某迭代器指向的容器位置在另一个迭代器所指位置之前，则说明前者小于后者。参与运算的两个迭代器必须指向的是同一个容器中的元素或尾元素的下一位置。")])])])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("difference_type")]),v._v("：保证足够大以存储任何两个迭代器对象间的距离，可正可负。")])]),v._v(" "),_("h2",{attrs:{id:"数组"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[v._v("#")]),v._v(" 数组")]),v._v(" "),_("ul",[_("li",[v._v("相当于vector的低级版，"),_("strong",[v._v("长度固定")]),v._v("。")])]),v._v(" "),_("h3",{attrs:{id:"定义和初始化内置数组"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#定义和初始化内置数组"}},[v._v("#")]),v._v(" 定义和初始化内置数组")]),v._v(" "),_("ul",[_("li",[v._v("初始化："),_("code",[v._v("char input_buffer[buffer_size];")]),v._v("，长度必须是const表达式，或者不写，让编译器自己推断。")]),v._v(" "),_("li",[v._v("数组不允许直接赋值给另一个数组。")])]),v._v(" "),_("h3",{attrs:{id:"访问数组元素"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#访问数组元素"}},[v._v("#")]),v._v(" 访问数组元素")]),v._v(" "),_("ul",[_("li",[v._v("数组下标的类型："),_("code",[v._v("size_t")]),v._v(" 。")]),v._v(" "),_("li",[v._v("字符数组的特殊性：结尾处有一个空字符，如 "),_("code",[v._v('char a[] = "hello";')]),v._v(" 。")]),v._v(" "),_("li",[v._v("用数组初始化 "),_("code",[v._v("vector")]),v._v("： "),_("code",[v._v("int a[] = {1,2,3,4,5}; vector<int> v(begin(a), end(a));")]),v._v(" 。")])]),v._v(" "),_("h3",{attrs:{id:"数组和指针"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数组和指针"}},[v._v("#")]),v._v(" 数组和指针")]),v._v(" "),_("ul",[_("li",[v._v("使用数组时，编译器一般会把它转换成指针。")]),v._v(" "),_("li",[v._v("标准库类型限定使用的下标必须是无符号类型，而内置的下标可以处理负值。")]),v._v(" "),_("li",[_("strong",[v._v("指针访问数组")]),v._v("：在表达式中使用数组名时，名字会自动转换成指向数组的第一个元素的指针。")])]),v._v(" "),_("h2",{attrs:{id:"c风格字符串"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#c风格字符串"}},[v._v("#")]),v._v(" C风格字符串")]),v._v(" "),_("ul",[_("li",[v._v("从C继承来的字符串。")]),v._v(" "),_("li",[v._v("用空字符结束（"),_("code",[v._v("\\0")]),v._v("）。")]),v._v(" "),_("li",[v._v("对大多数应用来说，使用标准库 "),_("code",[v._v("string")]),v._v("比使用C风格字符串更安全、更高效。")]),v._v(" "),_("li",[v._v("获取 "),_("code",[v._v("string")]),v._v(" 中的 "),_("code",[v._v("cstring")]),v._v(" ： "),_("code",[v._v("const char *str = s.c_str();")]),v._v(" 。")])]),v._v(" "),_("p",[v._v("C标准库String函数，定义在"),_("code",[v._v("<cstring>")]),v._v(" 中：")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("函数")]),v._v(" "),_("th",[v._v("介绍")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[_("code",[v._v("strlen(p)")])]),v._v(" "),_("td",[v._v("返回"),_("code",[v._v("p")]),v._v("的长度，空字符不计算在内")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("strcmp(p1, p2)")])]),v._v(" "),_("td",[v._v("比较"),_("code",[v._v("p1")]),v._v("和"),_("code",[v._v("p2")]),v._v("的相等性。如果"),_("code",[v._v("p1==p2")]),v._v("，返回0；如果"),_("code",[v._v("p1>p2")]),v._v("，返回一个正值；如果"),_("code",[v._v("p1<p2")]),v._v("，返回一个负值。")])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("strcat(p1, p2)")])]),v._v(" "),_("td",[v._v("将"),_("code",[v._v("p2")]),v._v("附加到"),_("code",[v._v("p1")]),v._v("之后，返回"),_("code",[v._v("p1")])])]),v._v(" "),_("tr",[_("td",[_("code",[v._v("strcpy(p1, p2)")])]),v._v(" "),_("td",[v._v("将"),_("code",[v._v("p2")]),v._v("拷贝给"),_("code",[v._v("p1")]),v._v("，返回"),_("code",[v._v("p1")])])])])]),v._v(" "),_("p",[_("strong",[v._v("尽量使用vector和迭代器，少用数组")])]),v._v(" "),_("h2",{attrs:{id:"多维数组"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#多维数组"}},[v._v("#")]),v._v(" 多维数组")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("多维数组的初始化")]),v._v("： "),_("code",[v._v("int ia[3][4] = {{0,1,2,3}, ...}")]),v._v("。")]),v._v(" "),_("li",[v._v("使用范围for语句时，除了最内层的循环外，其他所有循环的控制变量都应该是"),_("strong",[v._v("引用")]),v._v("类型。")])]),v._v(" "),_("h2",{attrs:{id:"指针vs引用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#指针vs引用"}},[v._v("#")]),v._v(" 指针vs引用")]),v._v(" "),_("ul",[_("li",[v._v("引用总是指向某个对象，定义引用时没有初始化是错的。")]),v._v(" "),_("li",[v._v("给引用赋值，修改的是该引用所关联的对象的值，而不是让引用和另一个对象相关联。")])]),v._v(" "),_("h2",{attrs:{id:"指向指针的指针"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#指向指针的指针"}},[v._v("#")]),v._v(" 指向指针的指针")]),v._v(" "),_("ul",[_("li",[v._v("定义： "),_("code",[v._v("int **ppi = &pi;")])]),v._v(" "),_("li",[v._v("解引用："),_("code",[v._v("**ppi")])])]),v._v(" "),_("h2",{attrs:{id:"动态数组"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#动态数组"}},[v._v("#")]),v._v(" 动态数组")]),v._v(" "),_("ul",[_("li",[v._v("使用 "),_("code",[v._v("new")]),v._v("和 "),_("code",[v._v("delete")]),v._v("表达和c中"),_("code",[v._v("malloc")]),v._v("和"),_("code",[v._v("free")]),v._v("类似的功能，即在堆（自由存储区）中分配存储空间。")]),v._v(" "),_("li",[v._v("定义： "),_("code",[v._v("int *pia = new int[10];")]),v._v(" 10可以被一个变量替代。")]),v._v(" "),_("li",[v._v("释放： "),_("code",[v._v("delete [] pia;")]),v._v("，注意不要忘记"),_("code",[v._v("[]")]),v._v("。")])])])}),[],!1,null,null,null);_.default=d.exports}}]);