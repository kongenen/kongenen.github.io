(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{451:function(s,a,t){"use strict";t.r(a);var n=t(11),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"第十八章-用于大型程序的工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第十八章-用于大型程序的工具"}},[s._v("#")]),s._v(" 第十八章 用于大型程序的工具")]),s._v(" "),a("p",[s._v("大规模应用程序的特殊要求包括：")]),s._v(" "),a("ul",[a("li",[s._v("在独立开发的子系统之间协同处理错误的能力。")]),s._v(" "),a("li",[s._v("使用各种库进行协同开发的能力。")]),s._v(" "),a("li",[s._v("对比较复杂的应用概念建模的能力。")])]),s._v(" "),a("h2",{attrs:{id:"异常处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异常处理"}},[s._v("#")]),s._v(" 异常处理")]),s._v(" "),a("p",[a("strong",[s._v("异常处理")]),s._v("（exception handling）机制允许程序中独立开发的部分能够在运行时就出现的问题进行通信并作出相应的处理。")]),s._v(" "),a("h3",{attrs:{id:"抛出异常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#抛出异常"}},[s._v("#")]),s._v(" 抛出异常")]),s._v(" "),a("p",[s._v("在C++语言中，我们通过"),a("strong",[s._v("抛出")]),s._v("（throwing）一条表达式来"),a("strong",[s._v("引发")]),s._v("（raised）一个异常。异常类型和当前的调用链决定了哪段"),a("strong",[s._v("处理代码")]),s._v("（handler）将用来处理该异常。")]),s._v(" "),a("p",[s._v("程序的控制权从"),a("code",[s._v("throw")]),s._v("转移到"),a("code",[s._v("catch")]),s._v("模块。")]),s._v(" "),a("p",[a("strong",[s._v("栈展开")]),s._v("：当"),a("code",[s._v("throw")]),s._v("出现在一个"),a("code",[s._v("try语句块")]),s._v("时，检查该"),a("code",[s._v("try语句块")]),s._v("相关的"),a("code",[s._v("catch")]),s._v("字句，若有匹配则处理；若无匹配，则继续检查外层的"),a("code",[s._v("try")]),s._v("匹配的"),a("code",[s._v("catch")]),s._v("。")]),s._v(" "),a("p",[s._v("若一个异常没有被捕获，则它将终止当前的程序。")]),s._v(" "),a("p",[s._v("对象销毁：")]),s._v(" "),a("ul",[a("li",[s._v("块退出后，它的局部对象将被销毁。")]),s._v(" "),a("li",[s._v("若异常发生在构造函数中，即使某个对象只构造了一部分，也要确保已构造的成员正确地被销毁。")]),s._v(" "),a("li",[s._v("将资源释放放在类的析构函数中，以保证资源能被正确释放。析构函数本身不会引发异常。")])]),s._v(" "),a("h3",{attrs:{id:"捕获异常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#捕获异常"}},[s._v("#")]),s._v(" 捕获异常")]),s._v(" "),a("p",[s._v("若无需访问抛出的异常对象，则可以忽略捕获形参的名字。")]),s._v(" "),a("p",[s._v("通常，若"),a("code",[s._v("catch")]),s._v("接受的异常与某个继承体系有关，则最好将该"),a("code",[s._v("catch")]),s._v("的参数定义成引用类型。")]),s._v(" "),a("p",[s._v("搜索"),a("code",[s._v("catch")]),s._v("未必是最佳匹配，而是第一个匹配，因此，越细化的"),a("code",[s._v("catch")]),s._v("越应该放在"),a("code",[s._v("catch")]),s._v("列表前段。")]),s._v(" "),a("p",[s._v("重新抛出："),a("code",[s._v("catch")]),s._v("代码执行一条"),a("code",[s._v("throw;")]),s._v("将异常传递给另一个"),a("code",[s._v("catch")]),s._v("语句。")]),s._v(" "),a("p",[s._v("捕获所有异常："),a("code",[s._v("catch(...)")])]),s._v(" "),a("h3",{attrs:{id:"构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[s._v("#")]),s._v(" 构造函数")]),s._v(" "),a("p",[s._v("处理构造函数初始值异常的唯一方法是将构造函数协程函数"),a("code",[s._v("try")]),s._v("语句块。")]),s._v(" "),a("p",[s._v("示例：")]),s._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("template")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typename")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Blob")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("T"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Blob")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("initializer_list"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("T"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" il"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token generic-function"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make_shared")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("T"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("il"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*函数体*/")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("bad_alloc "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("handle_out_of_memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"noexcept异常说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#noexcept异常说明"}},[s._v("#")]),s._v(" noexcept异常说明")]),s._v(" "),a("p",[s._v("使用"),a("code",[s._v("noexcept")]),s._v("说明指定某个函数不会抛出异常。")]),s._v(" "),a("p",[s._v("示例：")]),s._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("recoup")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("noexcept")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//C++11")]),s._v("\ncoid "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("recoup")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//老版本")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"异常类层次"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异常类层次"}},[s._v("#")]),s._v(" 异常类层次")]),s._v(" "),a("p",[s._v("标准exception层次：")]),s._v(" "),a("ul",[a("li",[s._v("exception\n"),a("ul",[a("li",[s._v("bad_cast")]),s._v(" "),a("li",[s._v("bad_alloc")]),s._v(" "),a("li",[s._v("runtime_error\n"),a("ul",[a("li",[s._v("overflow_error")]),s._v(" "),a("li",[s._v("underflow_error")]),s._v(" "),a("li",[s._v("range_error")])])]),s._v(" "),a("li",[s._v("logic_error\n"),a("ul",[a("li",[s._v("domain_error")]),s._v(" "),a("li",[s._v("invalid_argument")]),s._v(" "),a("li",[s._v("out_of_range")]),s._v(" "),a("li",[s._v("length_error")])])])])])]),s._v(" "),a("p",[s._v("自定义异常类：")]),s._v(" "),a("p",[s._v("示例：")]),s._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("out_of_stock")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token base-clause"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("runtime_error")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("explicit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("out_of_stock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("string "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("runtime_error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"命名空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名空间"}},[s._v("#")]),s._v(" 命名空间")]),s._v(" "),a("p",[s._v("多个库将名字放置在全局命名空间中将引发"),a("strong",[s._v("命名空间污染")]),s._v("（namespace pollution）。"),a("strong",[s._v("命名空间")]),s._v("（namespace）分割了全局命名空间，其中每个命名空间是一个作用域。")]),s._v(" "),a("h3",{attrs:{id:"命名空间定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名空间定义"}},[s._v("#")]),s._v(" 命名空间定义")]),s._v(" "),a("p",[s._v("命名空间的定义包含两部分：1.关键字"),a("code",[s._v("namespace")]),s._v("；2.命名空间名称。后面是一系列由花括号括起来的声明和定义。命名空间作用域后面无需分号。")]),s._v(" "),a("p",[s._v("示例：")]),s._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" cplusplus_primer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("每个命名空间都是一个"),a("strong",[s._v("作用域")]),s._v("。定义在某个命名空间内的名字可以被该命名空间内的其他成员直接访问，也可以被这些成员内嵌套作用域中的任何单位访问。位于该命名空间之外的代码必须明确指出所用的名字是属于哪个命名空间的。")]),s._v(" "),a("p",[s._v("命名空间可以是"),a("strong",[s._v("不连续")]),s._v("的。这点不同于其他作用域，意味着同一命名空间可以在多处出现。")]),s._v(" "),a("p",[a("strong",[s._v("内联命名空间")]),s._v("（C++11）：")]),s._v(" "),a("p",[s._v("无需使用该命名空间的前缀，通过外层命名空间就可以直接访问。")]),s._v(" "),a("p",[s._v("示例：")]),s._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" cplusplus_primer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inline")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" FifthEd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示本书第5版代码")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Query_base")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\ncplusplus_primer"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("Query_base qb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[a("strong",[s._v("未命名的命名空间")]),s._v("：")]),s._v(" "),a("p",[s._v("指关键字"),a("code",[s._v("namespace")]),s._v("后面紧跟花括号的用法。未命名的命名空间中定义的变量拥有静态的声明周期：在第一次使用前创建，直到程序结束才销毁。不能跨越多个文件。")]),s._v(" "),a("h3",{attrs:{id:"使用命名空间成员"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用命名空间成员"}},[s._v("#")]),s._v(" 使用命名空间成员")]),s._v(" "),a("p",[s._v("像"),a("code",[s._v("namespace_name::member_name")]),s._v("这样使用命名空间的成员非常繁琐。")]),s._v(" "),a("p",[a("strong",[s._v("命名空间的别名")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" primer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" cplusplus_primer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("using声明")]),s._v("（using declaration）：")]),s._v(" "),a("p",[s._v("一条"),a("code",[s._v("using")]),s._v("声明语句一次只引入命名空间的一个成员。")]),s._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nstring s "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("strong",[s._v("using指示")]),s._v("（using directive）：")]),s._v(" "),a("p",[s._v("使得某个特定的命名空间中所有的名字都可见。")]),s._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nstring s "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"类、命名空间与作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类、命名空间与作用域"}},[s._v("#")]),s._v(" 类、命名空间与作用域")]),s._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("C1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("f3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nA"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("C1"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("f3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"重载与命名空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重载与命名空间"}},[s._v("#")]),s._v(" 重载与命名空间")]),s._v(" "),a("p",[a("code",[s._v("using")]),s._v("声明语句声明的是一个名字，而非特定的函数，也就是包括该函数的所有版本，都被引入到当前作用域中。")]),s._v(" "),a("h2",{attrs:{id:"多重继承与虚继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多重继承与虚继承"}},[s._v("#")]),s._v(" 多重继承与虚继承")]),s._v(" "),a("h3",{attrs:{id:"多重继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多重继承"}},[s._v("#")]),s._v(" 多重继承")]),s._v(" "),a("h3",{attrs:{id:"类型转换与多个基类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型转换与多个基类"}},[s._v("#")]),s._v(" 类型转换与多个基类")]),s._v(" "),a("h3",{attrs:{id:"多重继承下的类作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多重继承下的类作用域"}},[s._v("#")]),s._v(" 多重继承下的类作用域")]),s._v(" "),a("ul",[a("li",[s._v("当一个类拥有多个基类时，有可能出现派生类从两个或更多基类中继承了同名成员的情况。此时，不加前缀限定符直接使用该名字将引发二义性。")])]),s._v(" "),a("h3",{attrs:{id:"虚继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚继承"}},[s._v("#")]),s._v(" 虚继承")]),s._v(" "),a("ul",[a("li",[s._v("虚继承的目的是令某个类做出声明，承诺愿意共享它的基类。其中，共享的基类子对象成为"),a("strong",[s._v("虚基类")]),s._v("。在这种机制下，不论虚基类在继承体系中出现了多少次，在派生类中都只包含唯一一个共享的虚基类子对象。")]),s._v(" "),a("li",[s._v("虚派生只影响从指定了虚基类的派生类中进一步派生出的类，它不会影响派生类本身。")])]),s._v(" "),a("h3",{attrs:{id:"构造函数与虚继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造函数与虚继承"}},[s._v("#")]),s._v(" 构造函数与虚继承")]),s._v(" "),a("ul",[a("li",[s._v("h含有虚基类的对象的构造顺序与一般的顺序稍有"),a("strong",[s._v("区别")]),s._v("：首先使用提供给最底层派生类构造函数的初始值初始化该对象的虚基类子部分，接下来按照直接基类在派生列表中出现的次序对其进行初始化。")]),s._v(" "),a("li",[s._v("虚基类总是先于非虚基类构造，与它们在继承体系中的次序和位置无关。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);